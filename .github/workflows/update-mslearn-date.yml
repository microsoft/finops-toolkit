name: 'Update MS Learn documentation dates'

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'docs-mslearn/**/*.md'
  workflow_dispatch: {}

env:
  github_user_name: "github-actions"
  github_email: "41898282+github-actions[bot]@users.noreply.github.com"
  github_commit_message: "Update MS Learn documentation dates"

jobs:
  update-mslearn-dates:
    name: Update ms.date fields in documentation
    if: github.repository == 'microsoft/finops-toolkit' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Local Git
        run: |
          git config --global user.name $github_user_name
          git config --global user.email $github_email

      - name: Get changed files
        id: changed_files
        run: |
          # Get the list of changed markdown files in docs-mslearn
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual dispatch, process all files
            echo "files=docs-mslearn" >> $GITHUB_OUTPUT
          else
            # Get files changed in the push
            changed_files=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} -- 'docs-mslearn/**/*.md' || echo "")
            if [ -n "$changed_files" ]; then
              # Convert to space-separated list
              files_list=$(echo "$changed_files" | tr '\n' ' ')
              echo "files=$files_list" >> $GITHUB_OUTPUT
            else
              echo "files=" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Update MS Learn documentation dates
        if: steps.changed_files.outputs.files != ''
        shell: pwsh
        run: |
          $VerbosePreference = "Continue"
          $changedFiles = "${{ steps.changed_files.outputs.files }}"
          if ($changedFiles -eq "docs-mslearn") {
            # Process all files in docs-mslearn
            ./src/scripts/Update-MsLearnDate.ps1
          } else {
            # Process only the changed files
            $files = $changedFiles -split ' ' | Where-Object { $_ -ne '' }
            foreach ($file in $files) {
              Write-Host "Processing changed file: $file"
              ./src/scripts/Update-MsLearnDate.ps1 -Path $file
            }
          }

      - name: Check for changes
        id: git_status
        run: |
          mapfile -t CHECK_GIT_STATUS < <(git status -s)
          printf "%s\n" "${CHECK_GIT_STATUS[@]}"
          echo "changes=${#CHECK_GIT_STATUS[@]}" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.git_status.outputs.changes > 0
        run: |
          echo "Pushing changes to origin..."
          git add .
          git commit -m "$github_commit_message [$GITHUB_ACTOR/${GITHUB_SHA::8}]"
          git push
