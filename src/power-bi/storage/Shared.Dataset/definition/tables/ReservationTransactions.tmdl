/// Cost and usage (FOCUS) data from Cost Management exports.
/// 
/// Data version = 1.0-preview(v1)
/// Learn more @ https://aka.ms/finops/hubs
table ReservationTransactions
	lineageTag: 4f416097-b08b-4b6e-abca-b82e5f6c5e59

	column BilledCost
		dataType: double
		lineageTag: 5fb951dc-6ac8-4174-a525-b77cb610f92a
		summarizeBy: sum
		sourceColumn: BilledCost

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column BillingAccountId
		dataType: string
		lineageTag: 5679e731-eab0-49ca-ad87-f70f3ab2ef24
		summarizeBy: none
		sourceColumn: BillingAccountId

		annotation SummarizationSetBy = Automatic

	column BillingCurrency
		dataType: string
		lineageTag: d56e5948-797b-4477-8fb5-2f0498139fb0
		summarizeBy: none
		sourceColumn: BillingCurrency

		annotation SummarizationSetBy = Automatic

	column BillingPeriodEnd
		dataType: string
		lineageTag: ebb39f52-e332-4fca-9906-cfff28ffd2ca
		summarizeBy: none
		sourceColumn: BillingPeriodEnd

		annotation SummarizationSetBy = Automatic

	column BillingPeriodStart
		dataType: dateTime
		formatString: General Date
		lineageTag: a8fbc40f-60ae-4ed3-927a-072cab0eb3e9
		summarizeBy: none
		sourceColumn: BillingPeriodStart

		annotation SummarizationSetBy = Automatic

	column ChargeCategory
		dataType: string
		lineageTag: fdf587e9-501a-4126-a276-d27795bc1145
		summarizeBy: none
		sourceColumn: ChargeCategory

		annotation SummarizationSetBy = Automatic

	column ChargeClass
		dataType: string
		lineageTag: 4f4265b3-c152-4b37-922e-50a5ad44e500
		summarizeBy: none
		sourceColumn: ChargeClass

		annotation SummarizationSetBy = Automatic

	column ChargeFrequency
		dataType: string
		lineageTag: ab804c81-de8f-45ff-9bd5-6b1caa5fdc8f
		summarizeBy: none
		sourceColumn: ChargeFrequency

		annotation SummarizationSetBy = Automatic

	column ChargePeriodStart
		dataType: dateTime
		formatString: General Date
		lineageTag: 2131a5ab-1c86-4563-a411-68dbcf006e00
		summarizeBy: none
		sourceColumn: ChargePeriodStart

		annotation SummarizationSetBy = Automatic

	column RegionId
		dataType: string
		lineageTag: 4d7c22c9-1b0f-44a1-b673-1975e09592ad
		summarizeBy: none
		sourceColumn: RegionId

		annotation SummarizationSetBy = Automatic

	column SubAccountId
		dataType: string
		lineageTag: 8f87484b-c335-460a-a8f8-07467b91f11a
		summarizeBy: none
		sourceColumn: SubAccountId

		annotation SummarizationSetBy = Automatic

	column SubAccountName
		dataType: string
		lineageTag: 6f728a0e-6fd4-477c-b0a7-6bb970726b7a
		summarizeBy: none
		sourceColumn: SubAccountName

		annotation SummarizationSetBy = Automatic

	column x_AccountName
		dataType: string
		lineageTag: d9be3cd7-394e-4635-9eca-6c757ae9954a
		summarizeBy: none
		sourceColumn: x_AccountName

		annotation SummarizationSetBy = Automatic

	column x_AccountOwnerId
		dataType: string
		lineageTag: 5a6b608e-a29d-42d3-92e1-09e79b33828a
		summarizeBy: none
		sourceColumn: x_AccountOwnerId

		annotation SummarizationSetBy = Automatic

	column x_BillingProfileId
		dataType: string
		lineageTag: e8191922-fa58-41db-af17-fdfd967d760a
		summarizeBy: none
		sourceColumn: x_BillingProfileId

		annotation SummarizationSetBy = Automatic

	column x_ChargeType
		dataType: string
		lineageTag: ee8575b7-5f1f-4467-92e8-d47c55532b7d
		summarizeBy: none
		sourceColumn: x_ChargeType

		annotation SummarizationSetBy = Automatic

	column x_CommittedQuantity
		dataType: double
		lineageTag: f4620706-1605-409e-aafe-506e78a45ef2
		summarizeBy: sum
		sourceColumn: x_CommittedQuantity

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_CostCenter
		dataType: string
		lineageTag: 9b2102fe-75d5-4aeb-b223-7f20e3d26727
		summarizeBy: none
		sourceColumn: x_CostCenter

		annotation SummarizationSetBy = Automatic

	column x_IncrementalRefreshDate
		dataType: string
		lineageTag: db9b73cb-8a9d-455c-88dd-41a7fd42bb2e
		summarizeBy: none
		sourceColumn: x_IncrementalRefreshDate

		annotation SummarizationSetBy = Automatic

	column x_InvoiceSectionName
		dataType: string
		lineageTag: 0a5f02e8-424d-4c5c-9f97-792c96faf826
		summarizeBy: none
		sourceColumn: x_InvoiceSectionName

		annotation SummarizationSetBy = Automatic

	column x_MonetaryCommitment
		dataType: double
		lineageTag: 467f6a13-81da-4cfd-89fa-a9297d69662a
		summarizeBy: sum
		sourceColumn: x_MonetaryCommitment

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_OriginalBillingAccountId
		dataType: string
		lineageTag: f1761eb6-6d4f-410f-b6dd-a066b7b4c129
		summarizeBy: none
		sourceColumn: x_OriginalBillingAccountId

		annotation SummarizationSetBy = Automatic

	column x_Overage
		dataType: double
		lineageTag: 17371265-09ec-4b9f-8ced-9a7f4c72de82
		summarizeBy: sum
		sourceColumn: x_Overage

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_SkuDescription
		dataType: string
		lineageTag: 7a37f59e-1c01-4c3c-b943-d15e8726d20c
		summarizeBy: none
		sourceColumn: x_SkuDescription

		annotation SummarizationSetBy = Automatic

	column x_SkuName
		dataType: string
		lineageTag: 32f9bf1e-8e4f-4898-9f2d-cfa8eb651b59
		summarizeBy: none
		sourceColumn: x_SkuName

		annotation SummarizationSetBy = Automatic

	column x_SkuOrderId
		dataType: string
		lineageTag: b0505033-6e88-4d8e-88a8-f3ba4c44f413
		summarizeBy: none
		sourceColumn: x_SkuOrderId

		annotation SummarizationSetBy = Automatic

	column x_SkuOrderName
		dataType: string
		lineageTag: 9b82938e-278d-45f1-ab6c-e77268debf67
		summarizeBy: none
		sourceColumn: x_SkuOrderName

		annotation SummarizationSetBy = Automatic

	column x_SkuTerm
		dataType: double
		lineageTag: ff07f4a7-23de-4b32-a283-1a049f1070d1
		summarizeBy: sum
		sourceColumn: x_SkuTerm

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_SubscriptionId
		dataType: string
		lineageTag: 55bc00bd-693e-453b-999d-609fe446528f
		summarizeBy: none
		sourceColumn: x_SubscriptionId

		annotation SummarizationSetBy = Automatic

	column x_BillingAccountAgreement
		dataType: string
		lineageTag: 50eb143b-728e-4ad2-8196-258a38fbe29d
		summarizeBy: none
		sourceColumn: x_BillingAccountAgreement

		annotation SummarizationSetBy = Automatic

	column x_SourceType
		dataType: string
		lineageTag: 396ebfae-f948-42fa-851e-19c017d42c28
		summarizeBy: none
		sourceColumn: x_SourceType

		annotation SummarizationSetBy = Automatic

	column x_SourceVersion
		dataType: string
		lineageTag: e97f269f-9801-41a4-9f77-4cf393906c6e
		summarizeBy: none
		sourceColumn: x_SourceVersion

		annotation SummarizationSetBy = Automatic

	partition ReservationTransactions = m
		mode: import
		queryGroup: Storage
		source = ```
				let
				    // Get the data
				    RawData = ftk_Storage("reservationtransactions"),
				
				    // Backfill MCA columns to handle the legacy merge
				    Backfill = if Table.HasColumns(RawData, {"BillingProfileId"}) then RawData else Table.AddColumn(Table.AddColumn(RawData, "BillingProfileId", each null), "InvoiceSectionName", each null),
				    FixTypes = Table.TransformColumnTypes(
				        Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(Backfill, 
				            // Normalize frequency
				            each [BillingFrequency], each if [BillingFrequency] = "OneTime" then "One-Time" else [BillingFrequency], Replacer.ReplaceValue, {"BillingFrequency"}),
				            // Use fully-qulified resrvation ID
				            each [BillingMonth], each DateTime.From(Text.Range([BillingMonth], 0, 4) & "-" & Text.Range([BillingMonth], 4, 2) & "-" & Text.Range([BillingMonth], 6, 2)), Replacer.ReplaceValue, {"BillingMonth"}),
				            // Fix inconsistent Microsoft term values
				            each [Term], each if [Term] = "P1M" then 1 else if [Term] = "P1Y" then 12 else if [Term] = "P3Y" then 36 else if [Term] = "P5Y" then 60 else Number.FromText([Term]), Replacer.ReplaceValue, {"Term"}),
				        {
				            // Dates
				            {"BillingMonth",         type datetime},
				            {"EventDate",            type datetime},
				            // Numbers
				            {"Amount",               type number},
				            {"MonetaryCommitment",   type number},
				            {"Overage",              type number},
				            {"Quantity",             type number},
				            {"Term",                 type number},
				            // Text
				            {"CurrentEnrollmentId",  type text},
				            {"PurchasingEnrollment", type text}
				        }
				    ),
				
				    Rename = Table.RenameColumns(
				        // Move values for legacy fields
				        Table.RemoveColumns(Table.ReplaceValue(Table.ReplaceValue(FixTypes,
				            each [BillingProfileId],   each if Table.HasColumns(RawData, {"CurrentEnrollmentId"}) and [CurrentEnrollmentId] <> null then [CurrentEnrollmentId] else [BillingProfileId],   Replacer.ReplaceValue, {"BillingProfileId"}),
				            each [InvoiceSectionName], each if Table.HasColumns(RawData, {"DepartmentName"})      and [DepartmentName]      <> null then [DepartmentName]      else [InvoiceSectionName], Replacer.ReplaceValue, {"InvoiceSectionName"}),
				            {"CurrentEnrollmentId", "DepartmentName"}
				        ),
				        {
				            {"AccountName",                "x_AccountName"},
				            {"AccountOwnerEmail",          "x_AccountOwnerId"},
				            {"Amount",                     "BilledCost"},
				            {"ArmSkuName",                 "x_SkuName"},
				            {"BillingFrequency",           "ChargeFrequency"},
				            {"BillingMonth",               "BillingPeriodStart"},
				            {"CostCenter",                 "x_CostCenter"},
				            {"Currency",                   "BillingCurrency"},
				            {"BillingProfileId",           "x_BillingProfileId"},
				            {"BillingProfileName",         "x_BillingProfileName"},
				            {"InvoiceSectionId",           "x_InvoiceSectionId"},
				            {"InvoiceSectionName",         "x_InvoiceSectionName"},
				            {"Description",                "x_SkuDescription"},
				            {"EventDate",                  "ChargePeriodStart"},
				            {"EventType",                  "x_ChargeType"},
				            {"Invoice",                    "x_Invoice"},
				            {"InvoiceId",                  "x_InvoiceId"},
				            {"MonetaryCommitment",         "x_MonetaryCommitment"},
				            {"Overage",                    "x_Overage"},
				            {"PurchasingEnrollment",       "x_OriginalBillingAccountId"},
				            {"PurchasingSubscriptionGuid", "x_SubscriptionId"},
				            {"PurchasingSubscriptionName", "SubAccountName"},
				            {"Quantity",                   "x_CommittedQuantity"},
				            {"Region",                     "RegionId"},
				            {"ReservationOrderId",         "x_SkuOrderId"},
				            {"ReservationOrderName",       "x_SkuOrderName"},
				            {"Term",                       "x_SkuTerm"}
				        },
				        MissingField.Ignore
				    ),
				    Add = Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Rename,
				        // TODO: Should we add ChargePeriodEnd? If so, what time should be used?
				        // BillingAccountId is not valid for MCA because we are missig the billing account ID (we only have billing profile ID)
				        "BillingAccountId", each if [x_BillingAccountAgreement] = "MCA" then "/providers/Microsoft.Billing/billingProfiles/" & [x_BillingProfileId] else "/providers/Microsoft.Billing/billingAccounts/" & [x_BillingProfileId]),
				        "BillingPeriodEnd", each Date.AddMonths([BillingPeriodStart], 1)),
				        "ChargeCategory",   each if [x_ChargeType] = "Purchase" or [x_ChargeType] = "Cancel" or [x_ChargeType] = "Refund" then "Purchase" else null),
				        "ChargeClass",      each if [x_ChargeType] = "Refund" then "Correction" else null),
				        "SubAccountId",     each "/subscriptions/" & [x_SubscriptionId]),
				        
				    // Sort columns alphabetically
				    Output = Table.ReorderColumns(Add, List.Sort(Table.ColumnNames(Add)))
				in
				    Output
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

