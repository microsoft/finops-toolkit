/// Cost and usage (FOCUS) data from Cost Management exports.
/// 
/// Learn more @ https://aka.ms/finops/hubs
table CostDetails
	lineageTag: 4b9830c4-e7c7-43ee-823c-d6b15359c25f

	measure EffectiveCostRunningTotal =
			
			CALCULATE(
				SUM('CostDetails'[EffectiveCost]),
				FILTER(
					ALLSELECTED('CostDetails'[ChargePeriodStart]),
					ISONORAFTER('CostDetails'[ChargePeriodStart], MAX('CostDetails'[ChargePeriodStart]), DESC)
				)
			)
		formatString: #,0.00
		lineageTag: 9d94450e-97c1-49a4-a87b-7e6399d9dfc4

		extendedProperty MeasureTemplate =
				{
				  "daxTemplateName": "RunningTotal",
				  "version": 0
				}

		changedProperty = FormatString

	measure x_CommitmentUtilization = IFERROR(SUM([x_CommitmentUtilizationAmount]) / SUM([x_CommitmentUtilizationPotential]), "")
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: 0c6b50f5-b0d1-4638-83b8-6fa8ceb39ede

		changedProperty = FormatString

	measure EffectiveCostVariance =
			
			VARX.P(
				KEEPFILTERS(VALUES(CostDetails[ChargePeriodStart])),
				CALCULATE(SUM([EffectiveCost]))
			)
		formatString: #,0.00
		lineageTag: e7a16003-35ee-4024-8a5e-94e071aeaf0c

		extendedProperty MeasureTemplate =
				{
				  "daxTemplateName": "VariancePerCategory",
				  "version": 0
				}

		changedProperty = FormatString

	measure ChargePeriod = FORMAT(MIN([ChargePeriodStart]), IF(AND(FORMAT(MIN([ChargePeriodStart]), "yyyy") = FORMAT(UTCTODAY(), "yyyy"), FORMAT(MIN([ChargePeriodStart]), "yyyy") = FORMAT(MAX([ChargePeriodEnd])-1, "yyyy")), "Mmm dd", "Mmm dd, yyyy")) & IF(FORMAT(MIN([ChargePeriodStart]), "Mmm dd, yyyy") = FORMAT(MAX([ChargePeriodEnd])-1, "Mmm dd, yyyy"), "", "-" & FORMAT(MAX([ChargePeriodEnd]), IF(AND(FORMAT(MIN([ChargePeriodStart]), "yyyy") = FORMAT(UTCTODAY(), "yyyy"), FORMAT(MIN([ChargePeriodStart]), "yyyy") = FORMAT(MAX([ChargePeriodEnd])-1, "yyyy")), "Mmm dd", "Mmm dd, yyyy")))
		lineageTag: e2fc22d0-4f7f-479f-b751-3de08d8ec892

	measure BillingPeriod = FORMAT(MIN([BillingPeriodStart]), "Mmm") & IF(FORMAT(MIN([BillingPeriodStart]), "Mmm yyyy") = FORMAT(MAX([BillingPeriodEnd])-1, "Mmm yyyy"), FORMAT(MIN([BillingPeriodStart]), " yyyy"), "-" & FORMAT(MAX([BillingPeriodEnd])-1, "Mmm yyyy"))
		lineageTag: aba7700d-40b5-4f19-8830-c8151c234a8c

	measure x_DiscountCostSavingsRunningTotal =
			
			CALCULATE(
				SUM('CostDetails'[x_DiscountCostSavings]),
				FILTER(
					ALLSELECTED('CostDetails'[ChargePeriodStart]),
					ISONORAFTER('CostDetails'[ChargePeriodStart], MAX('CostDetails'[ChargePeriodStart]), DESC)
				)
			)
		formatString: #,0.00
		lineageTag: 5b5450f4-95c7-4e04-aca7-f19a55b329a7

	measure x_CommitmentCostSavingsRunningTotal =
			
			CALCULATE(
				SUM('CostDetails'[x_CommitmentCostSavings]),
				FILTER(
					ALLSELECTED('CostDetails'[ChargePeriodStart]),
					ISONORAFTER('CostDetails'[ChargePeriodStart], MAX('CostDetails'[ChargePeriodStart]), DESC)
				)
			)
		formatString: #,0.00
		lineageTag: 13e19756-e89f-4eb3-a938-dc01519ad9fc

	measure x_NegotiatedCostSavingsRunningTotal =
			
			CALCULATE(
				SUM('CostDetails'[x_NegotiatedCostSavings]),
				FILTER(
					ALLSELECTED('CostDetails'[ChargePeriodStart]),
					ISONORAFTER('CostDetails'[ChargePeriodStart], MAX('CostDetails'[ChargePeriodStart]), DESC)
				)
			)
		formatString: #,0.00
		lineageTag: 694d154e-c226-4519-bbad-3a8aea6b1c17

	measure x_EffectiveCostPerResource = SUM(CostDetails[EffectiveCost]) / COUNTROWS(VALUES(CostDetails[ResourceId]))
		lineageTag: 4934350c-8257-4040-a3a0-dec37fae3fff

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column ResourceId
		dataType: string
		lineageTag: 7b7ed1e4-1b01-4d72-93be-80f2cf8bbc2b
		summarizeBy: none
		sourceColumn: ResourceId

		annotation SummarizationSetBy = Automatic

	column Tags
		dataType: string
		lineageTag: 8d43483f-d48f-45e9-9c72-cf1f4bb641e2
		summarizeBy: none
		sourceColumn: Tags

		annotation SummarizationSetBy = Automatic

	column ResourceNameUnique
		dataType: string
		lineageTag: 92bd826c-d53a-44de-b61d-20420ed5b62a
		summarizeBy: none
		sourceColumn: ResourceNameUnique

		annotation SummarizationSetBy = Automatic

	column BilledCost
		dataType: double
		formatString: #,0.00
		lineageTag: a1fcba11-fcd9-45ff-bfc0-0dda3262d5af
		summarizeBy: sum
		sourceColumn: BilledCost

		annotation SummarizationSetBy = Automatic

	column ListCost
		dataType: double
		lineageTag: 93c7a3c3-4c49-48ba-aa44-1f71b6059922
		summarizeBy: sum
		sourceColumn: ListCost

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CommitmentDiscountId
		dataType: string
		lineageTag: 7f53c563-01eb-41dd-8cba-5ca8e0fa22e8
		summarizeBy: none
		sourceColumn: CommitmentDiscountId

		annotation SummarizationSetBy = Automatic

	column CommitmentDiscountName
		dataType: string
		lineageTag: db3f192f-7359-429e-8aeb-7857c596c58e
		summarizeBy: none
		sourceColumn: CommitmentDiscountName

		annotation SummarizationSetBy = Automatic

	column CommitmentDiscountNameUnique
		dataType: string
		lineageTag: fb06d900-9a45-49a4-9cc6-e4ca6336345c
		summarizeBy: none
		sourceColumn: CommitmentDiscountNameUnique

		annotation SummarizationSetBy = Automatic

	column BillingCurrency
		dataType: string
		lineageTag: 2b808b9b-0849-405b-baf8-29da9e46ab9e
		summarizeBy: none
		sourceColumn: BillingCurrency

		annotation SummarizationSetBy = Automatic

	column x_SkuTermLabel = FORMAT([x_SkuTerm]/12, "# Year") & IF([x_SkuTerm]>12, "s", "")
		dataType: string
		lineageTag: 72f5fd69-29d6-4fce-9b09-d18a9405cc92
		summarizeBy: none

		changedProperty = DataType

		annotation SummarizationSetBy = Automatic

	column PublisherName
		dataType: string
		lineageTag: 6532fcfe-bb73-4a88-a235-b3064ed1586f
		summarizeBy: none
		sourceColumn: PublisherName

		annotation SummarizationSetBy = Automatic

	column ResourceName
		dataType: string
		lineageTag: 50370d17-3cdc-4471-8739-567b862e0666
		summarizeBy: none
		sourceColumn: ResourceName

		annotation SummarizationSetBy = Automatic

	column ResourceType
		dataType: string
		lineageTag: e59f22c0-d22a-4797-b416-dba2b84d21a6
		summarizeBy: none
		sourceColumn: ResourceType

		annotation SummarizationSetBy = Automatic

	column ChargePeriodStart
		dataType: dateTime
		formatString: Mmm d, yyyy
		lineageTag: d0c0bd47-7aa7-44e4-82cc-91109ebb2eb0
		summarizeBy: none
		sourceColumn: ChargePeriodStart

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	column CommitmentDiscountType
		dataType: string
		lineageTag: 4c1fd275-aba2-46eb-aa8b-ad445d894ab5
		summarizeBy: none
		sourceColumn: CommitmentDiscountType

		annotation SummarizationSetBy = Automatic

	column EffectiveCost
		dataType: double
		formatString: #,0.00
		lineageTag: 13c25b5f-483d-4508-a5b6-24db10ae794f
		summarizeBy: sum
		sourceColumn: EffectiveCost

		annotation SummarizationSetBy = Automatic

	column InvoiceIssuerName
		dataType: string
		lineageTag: 6a757f71-5cdf-4cdf-8027-7b7f12cc59a3
		summarizeBy: none
		sourceColumn: InvoiceIssuerName

		annotation SummarizationSetBy = Automatic

	column ListUnitPrice
		dataType: double
		lineageTag: db17aa29-c7bf-4038-b91d-716d3f8bc4de
		summarizeBy: sum
		sourceColumn: ListUnitPrice

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PricingCategory
		dataType: string
		lineageTag: 6344005f-d7da-405d-9c80-c3e1b0b476de
		summarizeBy: none
		sourceColumn: PricingCategory

		annotation SummarizationSetBy = Automatic

	column PricingUnit
		dataType: string
		lineageTag: 50d010c6-9503-475f-a95b-5a2bce9c84b8
		summarizeBy: none
		sourceColumn: PricingUnit

		annotation SummarizationSetBy = Automatic

	column ProviderName
		dataType: string
		lineageTag: 484d657d-16da-40a5-a203-1a3075e10c74
		summarizeBy: none
		sourceColumn: ProviderName

		annotation SummarizationSetBy = Automatic

	column ServiceCategory
		dataType: string
		lineageTag: ff8c4744-441e-44c8-9cd0-6d16184366b2
		summarizeBy: none
		sourceColumn: ServiceCategory

		annotation SummarizationSetBy = Automatic

	column ServiceName
		dataType: string
		lineageTag: f9453edd-2a47-489a-afb6-c022637140ba
		summarizeBy: none
		sourceColumn: ServiceName

		annotation SummarizationSetBy = Automatic

	column SkuId
		dataType: string
		lineageTag: 1b4ea8ef-5a01-4741-a9e5-b3c7914eae1e
		summarizeBy: none
		sourceColumn: SkuId

		annotation SummarizationSetBy = Automatic

	column SubAccountId
		dataType: string
		lineageTag: bd6d102f-1b82-4ec2-9171-35b28c967f20
		summarizeBy: none
		sourceColumn: SubAccountId

		annotation SummarizationSetBy = Automatic

	column SubAccountName
		dataType: string
		lineageTag: 13a3a562-55ec-4c58-80ae-560abf5c368c
		summarizeBy: none
		sourceColumn: SubAccountName

		annotation SummarizationSetBy = Automatic

	column SubAccountType
		dataType: string
		lineageTag: d88aae93-e75e-4e89-8d43-34d396ccac89
		summarizeBy: none
		sourceColumn: SubAccountType

		annotation SummarizationSetBy = Automatic

	column x_AccountName
		dataType: string
		lineageTag: 89e8da04-3828-47a2-b83d-6b6e6ae9c43b
		summarizeBy: none
		sourceColumn: x_AccountName

		annotation SummarizationSetBy = Automatic

	column x_AccountOwnerId
		dataType: string
		lineageTag: 6ec0f40e-e569-43c5-8e79-99ffa4a707ef
		summarizeBy: none
		sourceColumn: x_AccountOwnerId

		annotation SummarizationSetBy = Automatic

	column x_BilledCostInUsd
		dataType: double
		formatString: #,0.00
		lineageTag: da9d3926-ac4e-447a-a626-25196028cf67
		summarizeBy: sum
		sourceColumn: x_BilledCostInUsd

		annotation SummarizationSetBy = Automatic

	column x_BillingAccountId
		dataType: string
		lineageTag: 4f6cdee5-c332-4951-952f-ede593c7fe56
		summarizeBy: none
		sourceColumn: x_BillingAccountId

		annotation SummarizationSetBy = Automatic

	column x_BillingAccountName
		dataType: string
		lineageTag: 2313c135-4f70-4a46-a65c-302d87f9fb90
		summarizeBy: none
		sourceColumn: x_BillingAccountName

		annotation SummarizationSetBy = Automatic

	column x_BillingExchangeRate
		dataType: double
		lineageTag: 6b3e00e4-4ff7-47ac-8b2f-8bfc726ce2d1
		summarizeBy: none
		sourceColumn: x_BillingExchangeRate

		annotation SummarizationSetBy = User

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_BillingExchangeRateDate
		dataType: dateTime
		formatString: General Date
		lineageTag: 7b0c8a90-630d-4437-9b63-92360a394650
		summarizeBy: none
		sourceColumn: x_BillingExchangeRateDate

		annotation SummarizationSetBy = Automatic

	column x_BillingProfileId
		dataType: string
		lineageTag: 15402a48-00e7-430f-983f-a946ac80a22d
		summarizeBy: none
		sourceColumn: x_BillingProfileId

		annotation SummarizationSetBy = Automatic

	column x_BillingProfileName
		dataType: string
		lineageTag: ac82d64e-b1ab-4a5c-acb6-6773b1d060c3
		summarizeBy: none
		sourceColumn: x_BillingProfileName

		annotation SummarizationSetBy = Automatic

	column x_CapacityCommitmentId
		dataType: string
		lineageTag: da57c4e0-58f5-4526-bfc7-d42ec903a191
		summarizeBy: none
		sourceColumn: x_CapacityCommitmentId

		annotation SummarizationSetBy = Automatic

	column x_CommitmentUtilizationAmount
		dataType: double
		formatString: 0.000
		lineageTag: 1fe73501-1602-48bb-b21c-243fd4209de1
		summarizeBy: sum
		sourceColumn: x_CommitmentUtilizationAmount

		annotation SummarizationSetBy = Automatic

	column x_CommitmentUtilizationPotential
		dataType: double
		formatString: 0.000
		lineageTag: 0860d85f-a24e-4866-be2a-91e21bd6eb73
		summarizeBy: sum
		sourceColumn: x_CommitmentUtilizationPotential

		annotation SummarizationSetBy = Automatic

	column x_CostAllocationRuleName
		dataType: string
		lineageTag: 20cb3119-1dc1-496b-bebe-f5939288ede1
		summarizeBy: none
		sourceColumn: x_CostAllocationRuleName

		annotation SummarizationSetBy = Automatic

	column x_CostCenter
		dataType: string
		lineageTag: 062aa1eb-34b2-4738-9532-ba9461a10488
		summarizeBy: none
		sourceColumn: x_CostCenter

		annotation SummarizationSetBy = Automatic

	column x_CustomerId
		dataType: string
		lineageTag: d1439e8a-5507-41ff-9803-6318169e1e5f
		summarizeBy: none
		sourceColumn: x_CustomerId

		annotation SummarizationSetBy = Automatic

	column x_CustomerName
		dataType: string
		lineageTag: fcb170e6-b3c6-4584-a78e-e8dbfb639e00
		summarizeBy: none
		sourceColumn: x_CustomerName

		annotation SummarizationSetBy = Automatic

	column x_EffectiveCostInUsd
		dataType: double
		formatString: #,0.00
		lineageTag: d456dce0-8883-46b1-b39d-660ae9afecaf
		summarizeBy: sum
		sourceColumn: x_EffectiveCostInUsd

		annotation SummarizationSetBy = Automatic

	column x_InvoiceId
		dataType: string
		lineageTag: 3116a926-299e-4b24-9ac5-d9a22c4903df
		summarizeBy: none
		sourceColumn: x_InvoiceId

		annotation SummarizationSetBy = Automatic

	column x_InvoiceSectionId
		dataType: string
		lineageTag: 155b4344-446d-4730-9a6e-77fcdb7bd02b
		summarizeBy: none
		sourceColumn: x_InvoiceSectionId

		annotation SummarizationSetBy = Automatic

	column x_InvoiceSectionName
		dataType: string
		lineageTag: 4596ba3c-0ae2-4aa5-892d-c8071d86e868
		summarizeBy: none
		sourceColumn: x_InvoiceSectionName

		annotation SummarizationSetBy = Automatic

	column x_PartnerCreditApplied
		dataType: string
		lineageTag: 8749fee2-c5cc-4180-9882-9e76481d432f
		summarizeBy: none
		sourceColumn: x_PartnerCreditApplied

		annotation SummarizationSetBy = Automatic

	column x_PartnerCreditRate
		dataType: double
		formatString: 0.000
		lineageTag: 0a1d961a-8e4d-4f9c-90b4-2dae1dbeef46
		summarizeBy: sum
		sourceColumn: x_PartnerCreditRate

		annotation SummarizationSetBy = Automatic

	column x_PricingCurrency
		dataType: string
		lineageTag: e79d062c-06c7-46f6-a83e-ef1d18d36bb4
		summarizeBy: none
		sourceColumn: x_PricingCurrency

		annotation SummarizationSetBy = Automatic

	column x_PricingUnitDescription
		dataType: string
		lineageTag: 8585d1b9-db15-4e20-96f1-03347a08d91c
		summarizeBy: none
		sourceColumn: x_PricingUnitDescription

		annotation SummarizationSetBy = Automatic

	column x_PublisherId
		dataType: string
		lineageTag: c2fe9800-1ae2-468c-9bec-ae8aac943897
		summarizeBy: none
		sourceColumn: x_PublisherId

		annotation SummarizationSetBy = Automatic

	column x_ResellerId
		dataType: string
		lineageTag: ba3f2450-bb86-4046-9942-ab6b866cb3ed
		summarizeBy: none
		sourceColumn: x_ResellerId

		annotation SummarizationSetBy = Automatic

	column x_ResellerName
		dataType: string
		lineageTag: 295e18fa-171e-4120-94e1-d3c122fd28ce
		summarizeBy: none
		sourceColumn: x_ResellerName

		annotation SummarizationSetBy = Automatic

	column x_ResourceGroupName
		dataType: string
		lineageTag: 22de28d3-1902-4479-bc14-5963e13c4dec
		summarizeBy: none
		sourceColumn: x_ResourceGroupName

		annotation SummarizationSetBy = Automatic

	column x_ResourceMachineName
		dataType: string
		lineageTag: 9e9d8a7a-200a-438f-8b48-3311fb817336
		summarizeBy: none
		sourceColumn: x_ResourceMachineName

		annotation SummarizationSetBy = Automatic

	column x_ServicePeriodEnd
		dataType: dateTime
		formatString: General Date
		lineageTag: ce3224e0-9c28-46d2-9268-9f3f23134d34
		summarizeBy: none
		sourceColumn: x_ServicePeriodEnd

		annotation SummarizationSetBy = Automatic

	column x_ServicePeriodStart
		dataType: dateTime
		formatString: General Date
		lineageTag: 813988da-21b6-4c56-bcce-03b5128e4401
		summarizeBy: none
		sourceColumn: x_ServicePeriodStart

		annotation SummarizationSetBy = Automatic

	column x_SkuCPUs
		dataType: int64
		formatString: 0
		lineageTag: 7eddf5c2-6824-4653-866b-b14a3e7ac72c
		summarizeBy: sum
		sourceColumn: x_SkuCPUs

		annotation SummarizationSetBy = Automatic

	column x_SkuDescription
		dataType: string
		lineageTag: bbb84cfc-e0fa-4cac-9b1b-0fdec62bae32
		summarizeBy: none
		sourceColumn: x_SkuDescription

		annotation SummarizationSetBy = Automatic

	column x_SkuDetails
		dataType: string
		lineageTag: ae9d2e07-790d-4068-8555-7cf186c503a1
		summarizeBy: none
		sourceColumn: x_SkuDetails

		annotation SummarizationSetBy = Automatic

	column x_SkuImageType
		dataType: string
		lineageTag: 8fd53259-dfdb-4cc9-842f-13a5519d4fe2
		summarizeBy: none
		sourceColumn: x_SkuImageType

		annotation SummarizationSetBy = Automatic

	column x_SkuLicenseCPUs
		dataType: double
		lineageTag: fc593d89-7199-4d64-a3e1-cc6e1906bc96
		summarizeBy: sum
		sourceColumn: x_SkuLicenseCPUs

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_SkuLicenseStatus
		dataType: string
		lineageTag: d35952f7-1c6c-48ab-a52b-9726835d2856
		summarizeBy: none
		sourceColumn: x_SkuLicenseStatus

		annotation SummarizationSetBy = Automatic

	column x_SkuMeterCategory
		dataType: string
		lineageTag: 28d1b14d-4fcb-4d6f-9c14-5d578fc6d071
		summarizeBy: none
		sourceColumn: x_SkuMeterCategory

		annotation SummarizationSetBy = Automatic

	column x_SkuMeterId
		dataType: string
		lineageTag: 80cc231b-9a70-4652-9127-cc37011fbb39
		summarizeBy: none
		sourceColumn: x_SkuMeterId

		annotation SummarizationSetBy = Automatic

	column x_SkuMeterName
		dataType: string
		lineageTag: ffc3d495-6005-4928-b654-e84940983d77
		summarizeBy: none
		sourceColumn: x_SkuMeterName

		annotation SummarizationSetBy = Automatic

	column x_SkuMeterSubcategory
		dataType: string
		lineageTag: d863a418-8e10-4a5f-ab03-6f57eb4c3de5
		summarizeBy: none
		sourceColumn: x_SkuMeterSubcategory

		annotation SummarizationSetBy = Automatic

	column x_SkuOfferId
		dataType: string
		lineageTag: b866a703-45fd-40ff-993d-aefe255223d6
		summarizeBy: none
		sourceColumn: x_SkuOfferId

		annotation SummarizationSetBy = Automatic

	column x_SkuOrderId
		dataType: string
		lineageTag: ed25ae50-75c5-4829-870c-e63890f7779f
		summarizeBy: none
		sourceColumn: x_SkuOrderId

		annotation SummarizationSetBy = Automatic

	column x_SkuOrderName
		dataType: string
		lineageTag: f80b7881-ebad-4848-abd5-bacd23407e34
		summarizeBy: none
		sourceColumn: x_SkuOrderName

		annotation SummarizationSetBy = Automatic

	column x_SkuPartNumber
		dataType: string
		lineageTag: 8d77b5f5-af81-45de-b162-5d2227cee100
		summarizeBy: none
		sourceColumn: x_SkuPartNumber

		annotation SummarizationSetBy = Automatic

	column x_SkuRegion
		dataType: string
		lineageTag: 2fb75d13-11f6-4c45-b48a-ab8743c7461f
		summarizeBy: none
		sourceColumn: x_SkuRegion

		annotation SummarizationSetBy = Automatic

	column x_SkuServiceFamily
		dataType: string
		lineageTag: 296dde95-f167-46b0-a180-81c7d2de8c83
		summarizeBy: none
		sourceColumn: x_SkuServiceFamily

		annotation SummarizationSetBy = Automatic

	column x_SkuTerm
		dataType: int64
		formatString: 0
		lineageTag: 693a0cf1-b610-42b5-8f84-de963522208f
		summarizeBy: sum
		sourceColumn: x_SkuTerm

		changedProperty = DataType

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isDecimal":true}

	column x_SkuType
		dataType: string
		lineageTag: d76f6ea7-7a9f-412e-bddf-2f2b3f8a8e52
		summarizeBy: none
		sourceColumn: x_SkuType

		annotation SummarizationSetBy = Automatic

	column x_SkuUsageType
		dataType: string
		lineageTag: 364e9a86-4832-4617-88da-5a903fcf0c6e
		summarizeBy: none
		sourceColumn: x_SkuUsageType

		annotation SummarizationSetBy = Automatic

	column x_SkuVMProperties
		dataType: string
		lineageTag: 7e202b1c-f405-4e2d-aa5d-30f24d9d29fc
		summarizeBy: none
		sourceColumn: x_SkuVMProperties

		annotation SummarizationSetBy = Automatic

	column x_UsageCPUHours
		dataType: double
		formatString: 0.000
		lineageTag: 613fe3dc-91ca-480a-bc08-97c5ab553f0f
		summarizeBy: sum
		sourceColumn: x_UsageCPUHours

		annotation SummarizationSetBy = Automatic

	column x_PricingSubcategory
		dataType: string
		lineageTag: bbc67ab0-c603-497f-be46-43b20f9dd173
		summarizeBy: none
		sourceColumn: x_PricingSubcategory

		annotation SummarizationSetBy = Automatic

	column x_CommitmentDiscountKey
		dataType: string
		lineageTag: cd529fc3-da76-466c-94b3-9ec13adc76cb
		summarizeBy: none
		sourceColumn: x_CommitmentDiscountKey

		annotation SummarizationSetBy = Automatic

	column BillingAccountId
		dataType: string
		lineageTag: 1969dc47-d85f-4a6b-9081-d7c7fe089577
		summarizeBy: none
		sourceColumn: BillingAccountId

		annotation SummarizationSetBy = Automatic

	column BillingAccountName
		dataType: string
		lineageTag: 26a2171b-1ebc-48ab-85cf-eb2cc2d815ac
		summarizeBy: none
		sourceColumn: BillingAccountName

		annotation SummarizationSetBy = Automatic

	column BillingAccountType
		dataType: string
		lineageTag: 30f3d59b-cb1b-401e-a68c-cb9fa23b1300
		summarizeBy: none
		sourceColumn: BillingAccountType

		annotation SummarizationSetBy = Automatic

	column BillingPeriodEnd
		dataType: dateTime
		formatString: Long Date
		lineageTag: 35c9937f-eb8c-4102-abfd-a6153b72b141
		summarizeBy: none
		sourceColumn: BillingPeriodEnd

		annotation SummarizationSetBy = Automatic

	column BillingPeriodStart
		dataType: dateTime
		formatString: Mmm yyyy
		lineageTag: 5bd5447d-f0e4-4db7-9154-768c589aacc3
		summarizeBy: none
		sourceColumn: BillingPeriodStart

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	column ChargeCategory
		dataType: string
		lineageTag: 7b447da5-7c79-42e8-ac42-16e961d729ed
		summarizeBy: none
		sourceColumn: ChargeCategory

		annotation SummarizationSetBy = Automatic

	column ChargeFrequency
		dataType: string
		lineageTag: 031df115-e693-4274-9a50-18b8818c2bb9
		summarizeBy: none
		sourceColumn: ChargeFrequency

		annotation SummarizationSetBy = Automatic

	column ChargePeriodEnd
		dataType: dateTime
		formatString: General Date
		lineageTag: d3c22e34-9351-4df5-8c12-51b9b72c3ec0
		summarizeBy: none
		sourceColumn: ChargePeriodEnd

		annotation SummarizationSetBy = Automatic

	column CommitmentDiscountCategory
		dataType: string
		lineageTag: 6b394de6-f1d8-48e9-b694-0fba728470b3
		summarizeBy: none
		sourceColumn: CommitmentDiscountCategory

		annotation SummarizationSetBy = Automatic

	column SubAccountNameUnique
		dataType: string
		lineageTag: f4e2b516-711a-4188-8ffd-3a30eb7582ec
		summarizeBy: none
		sourceColumn: SubAccountNameUnique

		annotation SummarizationSetBy = Automatic

	column x_EffectiveUnitPrice
		dataType: double
		formatString: 0.000
		lineageTag: c407cc4d-059b-42a8-8bd8-2ef740758530
		summarizeBy: none
		sourceColumn: x_EffectiveUnitPrice

		annotation SummarizationSetBy = User

	column x_Month
		dataType: dateTime
		formatString: General Date
		lineageTag: 953d0444-58c5-4ce4-a516-8b9a38d60cc1
		summarizeBy: none
		sourceColumn: x_Month

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column x_ResourceGroupNameUnique
		dataType: string
		lineageTag: 21f60ea1-91d9-47b7-83d6-e185b1a5015a
		summarizeBy: none
		sourceColumn: x_ResourceGroupNameUnique

		annotation SummarizationSetBy = Automatic

	column ChargeDescription
		dataType: string
		lineageTag: cb28c95c-b237-41c2-b596-f7c8e6283178
		summarizeBy: none
		sourceColumn: ChargeDescription

		annotation SummarizationSetBy = Automatic

	column AvailabilityZone
		dataType: string
		lineageTag: fa8726de-d358-4cd6-bd5e-6f4dbd85f973
		summarizeBy: none
		sourceColumn: AvailabilityZone

		annotation SummarizationSetBy = Automatic

	column PricingQuantity
		dataType: double
		formatString: #,0.000
		lineageTag: e7f752f8-95d2-4fc2-9e86-19a2bc17d62b
		summarizeBy: sum
		sourceColumn: PricingQuantity

		annotation SummarizationSetBy = Automatic

	column SkuPriceId
		dataType: string
		lineageTag: 22cb2e66-fd86-48f7-baf8-2381735335f8
		summarizeBy: none
		sourceColumn: SkuPriceId

		annotation SummarizationSetBy = Automatic

	column x_BilledUnitPrice
		dataType: double
		formatString: 0.000
		lineageTag: 5c146585-99e9-439a-bf58-1b2a336514c3
		summarizeBy: none
		sourceColumn: x_BilledUnitPrice

		annotation SummarizationSetBy = User

	column x_SourceType
		dataType: string
		lineageTag: 47fcf209-57d6-4c70-9b47-dc82f6ff4454
		summarizeBy: none
		sourceColumn: x_SourceType

		annotation SummarizationSetBy = Automatic

	column x_SourceVersion
		dataType: string
		lineageTag: ae4954b3-ca2a-44f8-8f32-38ca8619f4d3
		summarizeBy: none
		sourceColumn: x_SourceVersion

		annotation SummarizationSetBy = Automatic

	column x_InvoiceIssuerId
		dataType: string
		lineageTag: 8ca7b114-d9d4-4763-bdab-91c0ba2774d8
		summarizeBy: none
		sourceColumn: x_InvoiceIssuerId

		annotation SummarizationSetBy = Automatic

	column x_PricingBlockSize
		dataType: double
		formatString: 0
		lineageTag: 9be6db8b-9965-4da0-9abe-99e263894536
		summarizeBy: none
		sourceColumn: x_PricingBlockSize

		annotation SummarizationSetBy = User

	column x_PublisherCategory
		dataType: string
		lineageTag: 6047b550-ee95-45c7-9ca9-d15694df36f3
		summarizeBy: none
		sourceColumn: x_PublisherCategory

		annotation SummarizationSetBy = Automatic

	column x_ResourceType
		dataType: string
		lineageTag: dc5e9c7e-404b-43d3-b8df-5fcd3566dd81
		summarizeBy: none
		sourceColumn: x_ResourceType

		annotation SummarizationSetBy = Automatic

	column x_SkuIsCreditEligible
		dataType: string
		lineageTag: 2fad9447-3c42-44ff-8add-b5857a826802
		summarizeBy: none
		sourceColumn: x_SkuIsCreditEligible

		annotation SummarizationSetBy = Automatic

	column x_SkuTier
		dataType: string
		lineageTag: a58ffae4-b0d9-4711-a0e0-b117334cbc81
		summarizeBy: none
		sourceColumn: x_SkuTier

		annotation SummarizationSetBy = Automatic

	column x_SkuDetailsDictionary
		dataType: string
		lineageTag: 66e250d9-a5f2-4fb5-843d-2e9c508bdaf6
		summarizeBy: none
		sourceColumn: x_SkuDetailsDictionary

		annotation SummarizationSetBy = Automatic

	column x_TagsDictionary
		dataType: string
		lineageTag: 473c8c3e-7d72-4c5b-88cc-d15ad072c39e
		summarizeBy: none
		sourceColumn: x_TagsDictionary

		annotation SummarizationSetBy = Automatic

	column x_CommitmentCostSavings
		dataType: double
		formatString: #,0.00
		lineageTag: 54d5425b-ad55-4ca8-a5d4-a0cbfd911b5e
		summarizeBy: sum
		sourceColumn: x_CommitmentCostSavings

		annotation SummarizationSetBy = User

	column x_CommitmentUnitPriceSavings
		dataType: double
		formatString: 0.000
		lineageTag: 58115278-c3b3-434b-9274-1358965fc752
		summarizeBy: none
		sourceColumn: x_CommitmentUnitPriceSavings

		annotation SummarizationSetBy = User

	column x_DiscountCostSavings
		dataType: double
		formatString: #,0.00
		lineageTag: b0a199ad-c6b3-452a-a5d1-df37a48b1f3e
		summarizeBy: sum
		sourceColumn: x_DiscountCostSavings

		annotation SummarizationSetBy = Automatic

	column x_DiscountUnitPriceSavings
		dataType: double
		formatString: 0.000
		lineageTag: 3443d766-8b6f-4f63-b512-1b31e34d9b02
		summarizeBy: none
		sourceColumn: x_DiscountUnitPriceSavings

		annotation SummarizationSetBy = User

	column x_NegotiatedCostSavings
		dataType: double
		formatString: #,0.00
		lineageTag: dc7c8a4c-5d29-4ad6-a7af-89ac0423604d
		summarizeBy: sum
		sourceColumn: x_NegotiatedCostSavings

		annotation SummarizationSetBy = Automatic

	column x_NegotiatedUnitPriceSavings
		dataType: double
		formatString: 0.000
		lineageTag: 80879716-c801-4add-8044-6e51e1cb2ad3
		summarizeBy: sum
		sourceColumn: x_NegotiatedUnitPriceSavings

		annotation SummarizationSetBy = Automatic

	column x_FreeReason
		dataType: string
		lineageTag: 84eb4444-b185-4b20-ae0a-9ba6688bc4e4
		summarizeBy: none
		sourceColumn: x_FreeReason

		annotation SummarizationSetBy = Automatic

	column ChargeClass
		dataType: string
		lineageTag: ffc76289-6fe7-4d0f-91f0-7ba52feeaad8
		summarizeBy: none
		sourceColumn: ChargeClass

		annotation SummarizationSetBy = Automatic

	column CommitmentDiscountStatus
		dataType: string
		lineageTag: 5a3529ac-9573-40c7-bca3-70c5354e40e9
		summarizeBy: none
		sourceColumn: CommitmentDiscountStatus

		annotation SummarizationSetBy = Automatic

	column ConsumedQuantity
		dataType: double
		lineageTag: c86ecbb7-2e3b-4e69-90ac-11a7ae7d3dda
		summarizeBy: sum
		sourceColumn: ConsumedQuantity

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column ConsumedUnit
		dataType: string
		lineageTag: 07064970-0a7b-463a-b1bc-2bbb53ed7b82
		summarizeBy: none
		sourceColumn: ConsumedUnit

		annotation SummarizationSetBy = Automatic

	column ContractedCost
		dataType: double
		lineageTag: 77ebe6d9-036a-4795-9c38-38fa9bb041c1
		summarizeBy: sum
		sourceColumn: ContractedCost

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column ContractedUnitPrice
		dataType: double
		lineageTag: bd34dcb2-f4fa-40e9-bf65-ccd246cd7767
		summarizeBy: sum
		sourceColumn: ContractedUnitPrice

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column RegionName
		dataType: string
		lineageTag: 144100b3-6df8-4e1d-a372-6ec8facaf125
		summarizeBy: none
		sourceColumn: RegionName

		annotation SummarizationSetBy = Automatic

	column x_ContractedCostInUsd
		dataType: double
		lineageTag: 6dcaf085-76c5-4770-9a69-307034f76247
		summarizeBy: sum
		sourceColumn: x_ContractedCostInUsd

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column x_IncrementalRefreshDate
		dataType: string
		lineageTag: 73487d4f-b0dd-4d41-8d9e-739636dabab8
		summarizeBy: none
		sourceColumn: x_IncrementalRefreshDate

		annotation SummarizationSetBy = Automatic

	column RegionId
		dataType: string
		lineageTag: d2ac0fa0-e284-4c48-888d-bea8ffbfb4f0
		summarizeBy: none
		sourceColumn: RegionId

		annotation SummarizationSetBy = Automatic

	column x_AccountId
		dataType: string
		lineageTag: dee15a89-6158-424c-80c9-c3683f92223e
		summarizeBy: none
		sourceColumn: x_AccountId

		annotation SummarizationSetBy = Automatic

	column x_ListCostInUsd
		dataType: string
		lineageTag: 0ae49ca5-1a12-4e33-8d20-f6adae5d4757
		summarizeBy: none
		sourceColumn: x_ListCostInUsd

		annotation SummarizationSetBy = Automatic

	column x_SourceChanges
		dataType: string
		lineageTag: 7162fa87-5d0f-45cd-b887-eadfe2748190
		summarizeBy: none
		sourceColumn: x_SourceChanges

		annotation SummarizationSetBy = Automatic

	column tag_Application
		dataType: string
		lineageTag: fd4de6d8-dcc7-4095-a8d4-091d0d08ab9a
		summarizeBy: none
		sourceColumn: tag_Application

		annotation SummarizationSetBy = Automatic

	column tag_BusinessUnit
		dataType: string
		lineageTag: c9965d41-eb70-48a5-ba3d-8f7b47b40b35
		summarizeBy: none
		sourceColumn: tag_BusinessUnit

		annotation SummarizationSetBy = Automatic

	column tag_CostCenter
		dataType: string
		lineageTag: 172b9a2c-e7d7-4226-b674-5ac1f3c3d8e5
		summarizeBy: none
		sourceColumn: tag_CostCenter

		annotation SummarizationSetBy = Automatic

	column tag_Department
		dataType: string
		lineageTag: bdf8534f-136d-4c49-8e20-ee0147697816
		summarizeBy: none
		sourceColumn: tag_Department

		annotation SummarizationSetBy = Automatic

	column tag_Division
		dataType: string
		lineageTag: 1a71a266-f4dd-4965-8195-8e5e62eb8c3e
		summarizeBy: none
		sourceColumn: tag_Division

		annotation SummarizationSetBy = Automatic

	column tag_Env
		dataType: string
		lineageTag: b0926ea8-afac-4f17-a82e-6f15447d50a1
		summarizeBy: none
		sourceColumn: tag_Env

		annotation SummarizationSetBy = Automatic

	column tag_Owner
		dataType: string
		lineageTag: 6483dacb-0cd9-4a30-b193-56ffd07a65d4
		summarizeBy: none
		sourceColumn: tag_Owner

		annotation SummarizationSetBy = Automatic

	column tag_Product
		dataType: string
		lineageTag: 39afa398-8d9f-45d1-a7c9-18a396408da2
		summarizeBy: none
		sourceColumn: tag_Product

		annotation SummarizationSetBy = Automatic

	column tag_Project
		dataType: string
		lineageTag: 0c6fe63a-9cb6-45c2-bdf5-9498ae13b3e4
		summarizeBy: none
		sourceColumn: tag_Project

		annotation SummarizationSetBy = Automatic

	column tag_Purpose
		dataType: string
		lineageTag: 0f18a438-44af-4800-8f19-4480118a3ca6
		summarizeBy: none
		sourceColumn: tag_Purpose

		annotation SummarizationSetBy = Automatic

	column tag_Service
		dataType: string
		lineageTag: 538b0bf9-9ac5-45a9-941b-e67b79354869
		summarizeBy: none
		sourceColumn: tag_Service

		annotation SummarizationSetBy = Automatic

	column x_ResourceParentId
		dataType: string
		lineageTag: b6210f90-e80d-4933-8140-07d293888b93
		summarizeBy: none
		sourceColumn: x_ResourceParentId

		annotation SummarizationSetBy = Automatic

	column x_ResourceParentName
		dataType: string
		lineageTag: 79861087-74b6-42e7-86bf-221702a4ba8a
		summarizeBy: none
		sourceColumn: x_ResourceParentName

		annotation SummarizationSetBy = Automatic

	column x_ResourceParentType
		dataType: string
		lineageTag: 561677fb-42fd-4325-a6a2-278d78cb1346
		summarizeBy: none
		sourceColumn: x_ResourceParentType

		annotation SummarizationSetBy = Automatic

	column x_ToolkitTool
		dataType: string
		lineageTag: 1911b67b-0305-4079-bac7-3e0a0cc27149
		summarizeBy: none
		sourceColumn: x_ToolkitTool

		annotation SummarizationSetBy = Automatic

	column x_ToolkitVersion
		dataType: string
		lineageTag: c0817ef1-b8fa-4060-98b3-8e68d1578fd8
		summarizeBy: none
		sourceColumn: x_ToolkitVersion

		annotation SummarizationSetBy = Automatic

	column x_BillingAccountAgreement
		dataType: string
		lineageTag: 99be9246-b223-46ec-ad71-94a8014ef7c7
		summarizeBy: none
		sourceColumn: x_BillingAccountAgreement

		annotation SummarizationSetBy = Automatic

	partition CostDetails-9a19f60d-0b5b-47c3-9fdf-8f57811d24d2 = m
		mode: import
		queryGroup: Storage
		source = ```
				let
				    // Tags to promote to explicit columns -- Tag names are case-sensitive and column names will be "tag_{TagName}"
				    // Add any tags you need promoted to this list
				    // For recommended tags, see https://learn.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/resource-tagging#minimum-suggested-tags
				    PromotedTags = {"Application", "BusinessUnit", "CostCenter", "Department", "Division", "Env", "Owner", "Product", "Project", "Purpose", "Service"},
				
				    // Get the data
				    RawData = ftk_Storage("focuscost"),
				
				    // Helper functions
				    _exists     = (col) => Table.HasColumns(RawData, col),
				    _isMissing  = (col) => _exists(col) = false,
				    _isBlank    = (val) => val = null or val = "" or Text.Replace(val, " ", "") = "",
				    _isNotBlank = (val) => _isBlank(val) = false,
				    _stringValue = (val) => if _isBlank(val) then null else val,
				    _swapCol    = (tbl, oldCol, newCol, newVal, optional newType) => let add = Table.AddColumn(tbl, newCol, newVal, newType), del = if Table.HasColumns(add, oldCol) then Table.RemoveColumns(add, {oldCol}) else add in del,
				    _resetCol   = (tbl, col, newVal, optional newType) => let tmpCol = Text.Combine({"tmp_", col}), tmp = _swapCol(tbl, col, tmpCol, newVal, newType), ren = Table.RenameColumns(tmp, {{tmpCol, col}}) in ren,
				    
				    // Update previous FOCUS versions
				    PerformDeprecatedOptimizations = #"Deprecated: Perform Extra Query Optimizations",
				    HasPreview = Table.HasColumns(RawData, {"ChargeSubcategory"}),
				    Has10      = Table.HasColumns(RawData, {"ChargeClass"}),
				    LatestSchema = if HasPreview = false then RawData
				        else if PerformDeprecatedOptimizations = false then error "LegacyFocusVersion: Please enable the 'Perform Extra Query Optimizations' parameter"
				        else (
				            let
				                ChargeClass         = if Has10
				                    then Table.ReplaceValue(RawData,          null,                       each if [ChargeSubcategory] = "Refund" then "Correction" else null, Replacer.ReplaceValue, {"ChargeClass"})
				                    else Table.AddColumn(   RawData,          "ChargeClass",              each if [ChargeSubcategory] = "Refund" then "Correction" else null),
				                CDStatus            = if Has10
				                    then Table.ReplaceValue(ChargeClass,      null,                       each if [ChargeSubcategory] = "Used Commitment" or [ChargeSubcategory] = "Unused Commitment" then Text.Replace([ChargeSubcategory], " Commitment", "") else null, Replacer.ReplaceValue, {"CommitmentDiscountStatus"})
				                    else Table.AddColumn(   ChargeClass,      "CommitmentDiscountStatus", each if [ChargeSubcategory] = "Used Commitment" or [ChargeSubcategory] = "Unused Commitment" then Text.Replace([ChargeSubcategory], " Commitment", "") else null),
				                ConsumedQuantity    = if Has10
				                    then Table.ReplaceValue(CDStatus,         null,                       each if [ChargeCategory] = "Usage" then [UsageQuantity] else null, Replacer.ReplaceValue, {"ConsumedQuantity"})
				                    else Table.AddColumn(   CDStatus,         "ConsumedQuantity",         each if [ChargeCategory] = "Usage" then [UsageQuantity] else null),
				                ConsumedUnit        = if Has10
				                    then Table.ReplaceValue(ConsumedQuantity, null,                       each if [ChargeCategory] = "Usage" then [UsageUnit] else null, Replacer.ReplaceValue, {"ConsumedUnit"})
				                    else Table.AddColumn(   ConsumedQuantity, "ConsumedUnit",             each if [ChargeCategory] = "Usage" then [UsageUnit] else null),
				                ChargeCategory      = Table.ReplaceValue(ConsumedUnit,   each [ChargeCategory],  each if [ChargeCategory] = "Adjustment" and [ChargeSubcategory] = "Refund" then "Purchase" else [ChargeCategory], Replacer.ReplaceValue, {"ChargeCategory"}),
				                PricingCategory     = Table.ReplaceValue(ChargeCategory, each [PricingCategory], each if [PricingCategory] = "On-Demand" then "Standard" else if [PricingCategory] = "Commitment-Based" then "Committed" else [PricingCategory], Replacer.ReplaceValue, {"PricingCategory"}),
				                RenamePreviewCols   = if Has10
				                    then Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(PricingCategory, 
				                        each [ContractedCost],        each if [ContractedCost] <> null        then [ContractedCost]        else [x_OnDemandCost],      Replacer.ReplaceValue, {"ContractedCost"}),
				                        each [x_ContractedCostInUsd], each if [x_ContractedCostInUsd] <> null then [x_ContractedCostInUsd] else [x_OnDemandCostInUsd], Replacer.ReplaceValue, {"x_ContractedCostInUsd"}),
				                        each [ContractedUnitPrice],   each if [ContractedUnitPrice] <> null   then [ContractedUnitPrice]   else [x_OnDemandUnitPrice], Replacer.ReplaceValue, {"ContractedUnitPrice"}),
				                        each [RegionName],            each if [RegionName] <> null            then [RegionName]            else [Region],              Replacer.ReplaceValue, {"RegionName"})
				                    else Table.RenameColumns(PricingCategory, {{"x_OnDemandCost", "ContractedCost"}, {"x_OnDemandCostInUsd", "x_ContractedCostInUsd"}, {"x_OnDemandUnitPrice", "ContractedUnitPrice"}, {"Region", "RegionName"}}),
				                RemovePreviewCols   = Table.RemoveColumns(RenamePreviewCols, {"ChargeSubcategory", "UsageQuantity", "UsageUnit", "x_ChargeId"})
				            in
				                RemovePreviewCols
				        ),
				
				    // Fix known bugs and set datatyps
				    Fixes = Table.TransformColumnTypes(
				        Table.ReplaceValue(Table.ReplaceValue(
				            // Create AvailabilityZone column if missing to support non-Microsoft clouds
				            if Table.HasColumns(LatestSchema, {"AvailabilityZone"}) then LatestSchema else Table.AddColumn(LatestSchema, "AvailabilityZone", each null),
				            // Fix savings plan purchases -- Cost Management fix pending as of Dec 8, 2024
				            each [EffectiveCost], each if [ChargeCategory] = "Purchase" and [CommitmentDiscountId] <> "" and [CommitmentDiscountId] <> null then 0.0 else [EffectiveCost], Replacer.ReplaceValue, {"EffectiveCost"}),
				            // Fix PricingCategory values -- Remove after Oct 1, 2025
				            "Standard", each if [CommitmentDiscountId] <> null and [ChargeCategory] = "Usage" then "Committed" else [PricingCategory], Replacer.ReplaceValue, {"PricingCategory"}),
				        {
				            // Date columns
				            {"BillingPeriodEnd",          type datetimezone},
				            {"BillingPeriodStart",        type datetimezone},
				            {"ChargePeriodEnd",           type datetimezone},
				            {"ChargePeriodStart",         type datetimezone},
				            {"x_BillingExchangeRateDate", type datetimezone},
				            {"x_ServicePeriodStart",      type datetimezone},
				            {"x_ServicePeriodEnd",        type datetimezone},
				            // Cost/price columns
				            {"BilledCost",                type number},
				            {"ContractedCost",            type number},
				            {"ContractedUnitPrice",       type number},
				            {"EffectiveCost",             type number},
				            {"ListCost",                  type number},
				            {"ListUnitPrice",             type number},
				            {"x_BilledCostInUsd",         type number},
				            {"x_BilledUnitPrice",         type number},
				            {"x_ContractedCostInUsd",     type number},
				            {"x_EffectiveCostInUsd",      type number},
				            {"x_EffectiveUnitPrice",      type number},
				            // Other columns
				            {"ConsumedQuantity",          type number},
				            {"PricingQuantity",           type number},
				            {"x_BillingExchangeRate",     type number},
				            {"x_PartnerCreditRate",       type number},
				            {"x_PricingBlockSize",        type number}
				            // {"x_SkuTerm",                 type number}
				            // {"x_SkuIsCreditEligible",   type logical}
				            // {"x_PartnerCreditApplied",  type logical}
				        }
				    ),
				    OptionalFixes = if PerformDeprecatedOptimizations = false then Fixes else Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(
				        // Track all the changes we're about to make before we make them for transparency
				        Table.AddColumn(
										Fixes,
				            "x_SourceChanges",
				            each let
				                value = Text.Combine(List.RemoveNulls({
				                    if ([ContractedCost] = null      or [ContractedCost] = 0)      and [EffectiveCost] <> 0                                        then "MissingContractedCost"            else null,
				                    if ([ContractedUnitPrice] = null or [ContractedUnitPrice] = 0) and [x_EffectiveUnitPrice] <> 0                                 then "MissingContractedUnitPrice"       else null,
				                    if ([ListCost] = null            or [ListCost] = 0)            and ([ContractedCost] <> 0      or [EffectiveCost] <> 0)        then "MissingListCost"                  else null,
				                    if ([ListUnitPrice] = null       or [ListUnitPrice] = 0)       and ([ContractedUnitPrice] <> 0 or [x_EffectiveUnitPrice] <> 0) then "MissingListUnitPrice"             else null,
				                    if [PricingCategory] = "Standard" and [CommitmentDiscountId] <> null and [ChargeCategory] = "Usage"                            then "PricingCategoryShouldBeCommitted" else null,
				                    if [x_SkuTerm] = "1Year" or [x_SkuTerm] = "3Years" or [x_SkuTerm] = "5Years"                                                   then "SkuTermShouldBeAnInteger"         else null
				                }), ","),
				                output = if _isBlank(value) then null else value
				            in
				                output
				        ),
				        // Fix inconsistent Microsoft x_SkuTerm values
				        "1Year",  12, Replacer.ReplaceValue, {"x_SkuTerm"}),
				        "3Years", 36, Replacer.ReplaceValue, {"x_SkuTerm"}),
				        "5Years", 60, Replacer.ReplaceValue, {"x_SkuTerm"}),
				
				    // Split CostDetails by what needs prices and what doesn't
				    PopulateMissingPrices = 
				        Table.TransformColumnTypes(
				            if #"Experimental: Add Missing Prices" = false then
				                // Copy prices/costs from related columns
				                Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(OptionalFixes,
				                    0.0, each if [x_EffectiveUnitPrice] <> 0                                 then [x_EffectiveUnitPrice] else [ContractedUnitPrice], Replacer.ReplaceValue, {"ContractedUnitPrice"}),
				                    0.0, each if ([ContractedUnitPrice] <> 0 or [x_EffectiveUnitPrice] <> 0) then [ContractedUnitPrice]  else [ListUnitPrice],       Replacer.ReplaceValue, {"ListUnitPrice"}),
				                    0.0, each if [EffectiveCost] <> 0                                        then [EffectiveCost]        else [ContractedCost],      Replacer.ReplaceValue, {"ContractedCost"}),
				                    0.0, each if ([ContractedCost] <> 0      or [EffectiveCost] <> 0)        then [ContractedCost]       else [ListCost],            Replacer.ReplaceValue, {"ListCost"})
				            else
				                Table.RemoveColumns(
				                    Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(Table.ReplaceValue(
				                        // Join only the rows/columns that need to be joined
				                        Table.ExpandTableColumn(
				                            Table.NestedJoin(
				                                Table.AddColumn(OptionalFixes, "tmp_MeterOfferStart", each [x_SkuMeterId] & [x_SkuOfferId] & DateTimeZone.ToText([ChargePeriodStart], [Format="yyyy-MM"])),
				                                {"tmp_MeterOfferStart"},
				                                // Join missing prices with the cost rows that are missing tose prices
				                                Table.SelectColumns(
				                                    Table.AddColumn(
				                                        Table.SelectRows(Prices, each [x_SkuPriceType] = "Consumption" and [x_SkuMeterId] <> "" and [x_SkuMeterId] <> null),
				                                        "tmp_MeterOfferStart",
				                                        each [x_SkuMeterId] & [x_SkuOfferId] & DateTime.ToText([x_EffectivePeriodStart], [Format="yyyy-MM"])
				                                    ),
				                                    {"tmp_MeterOfferStart", "ListUnitPrice", "ContractedUnitPrice", "PricingUnit", "x_PricingBlockSize"}
				                                ),
				                                {"tmp_MeterOfferStart"},
				                                "Prices",
				                                JoinKind.LeftOuter
				                            ),
				                            "Prices",
				                            {"ListUnitPrice", "ContractedUnitPrice", "PricingUnit", "x_PricingBlockSize"},
				                            {"NewListUnitPrice", "NewContractedUnitPrice", "NewPricingUnit", "NewPricingBlockSize"}
				                        ),
				                        // Update missing prices
				                        0.0, each if [x_EffectiveUnitPrice] <> 0                                 and [PricingUnit] = [NewPricingUnit] then [NewContractedUnitPrice] * [x_BillingExchangeRate] / [NewPricingBlockSize] * [x_PricingBlockSize] else [x_EffectiveUnitPrice], Replacer.ReplaceValue, {"ContractedUnitPrice"}),
				                        0.0, each if ([ContractedUnitPrice] <> 0 or [x_EffectiveUnitPrice] <> 0) and [PricingUnit] = [NewPricingUnit] then [NewListUnitPrice]       * [x_BillingExchangeRate] / [NewPricingBlockSize] * [x_PricingBlockSize] else [ContractedUnitPrice],  Replacer.ReplaceValue, {"ListUnitPrice"}),
				                        // Update missing costs
				                        0.0, each if [EffectiveCost] <> 0                                        and [ContractedUnitPrice] <> null then [PricingQuantity] * [ContractedUnitPrice] else [ContractedCost], Replacer.ReplaceValue, {"ContractedCost"}),
				                        0.0, each if ([ContractedCost] <> 0      or [EffectiveCost] <> 0)        and [ListUnitPrice]       <> null then [PricingQuantity] * [ListUnitPrice]       else [ListCost],       Replacer.ReplaceValue, {"ListCost"}),
				                    {"NewListUnitPrice", "NewContractedUnitPrice", "NewPricingUnit", "NewPricingBlockSize", "tmp_MeterOfferStart"}
				                ),
				            {{"ContractedCost", type number}, {"ContractedUnitPrice", type number}, {"ListCost", type number}, {"ListUnitPrice", type number}}
				        ),
				
				    Add = Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(
				        PopulateMissingPrices,
				        // Parse arrays
				        "x_SkuDetailsDictionary", each if _isBlank([x_SkuDetails]) then [] else try Json.Document([x_SkuDetails]) otherwise []),
				        "x_TagsDictionary",       each if _isBlank([Tags])         then [] else try Json.Document([Tags])         otherwise []),
				        // Commitment metadata
				        "x_CommitmentUtilizationPotential", each if [CommitmentDiscountCategory] = "Usage" then [ConsumedQuantity] else if [CommitmentDiscountCategory] = "Spend" then [EffectiveCost] else 0, type number),
				        "x_CommitmentUtilizationAmount",    each if [CommitmentDiscountStatus] = "Used" then [x_CommitmentUtilizationPotential] else 0, type number),
				        // Savings calculations
				        "x_CommitmentUnitPriceSavings", each if [ContractedUnitPrice] <> null and [ContractedUnitPrice] > 0 and [x_EffectiveUnitPrice] <> null and [x_EffectiveUnitPrice] > 0 and [ContractedUnitPrice] >= [x_EffectiveUnitPrice] then [ContractedUnitPrice] - [x_EffectiveUnitPrice] else null, type number),
				        "x_NegotiatedUnitPriceSavings", each if [ContractedUnitPrice] <> null and [ContractedUnitPrice] > 0 and [ListUnitPrice]        <> null and [ListUnitPrice]        > 0 and [ListUnitPrice]       >= [ContractedUnitPrice]  then [ListUnitPrice]       - [ContractedUnitPrice]  else null, type number),
				        "x_DiscountUnitPriceSavings",   each if [ListUnitPrice]       <> null and [ListUnitPrice]       > 0 and [x_EffectiveUnitPrice] <> null and [x_EffectiveUnitPrice] > 0 and [ListUnitPrice]       > 0 and [ListUnitPrice]       >= [x_EffectiveUnitPrice] then [ListUnitPrice]       - [x_EffectiveUnitPrice] else null, type number),
				        "x_CommitmentCostSavings",      each if _isBlank([CommitmentDiscountCategory]) then 0 else if [ContractedCost] <> null and [ContractedCost] > 0 and [EffectiveCost] <> null and [EffectiveCost] > 0 and [ContractedCost] >= [EffectiveCost] then [ContractedCost] - [EffectiveCost] else null, type number),
				        "x_NegotiatedCostSavings",      each if [ListCost]            <> null and [ListCost]            > 0 and [ContractedCost]       <> null and [ContractedCost]       > 0 and [ListCost]            >= [ContractedCost]       then [ListCost]            - [ContractedCost] else null, type number),
				        "x_DiscountCostSavings",        
				            each if [ListCost]            <> null and [ListCost]            > 0 and [EffectiveCost]        <> null and [EffectiveCost]        > 0 and [ListCost]       >= [EffectiveCost] then [ListCost]       - [EffectiveCost]  
				            else if [ContractedCost]      <> null and [ContractedCost]      > 0 and [EffectiveCost]        <> null and [EffectiveCost]        > 0 and [ContractedCost] >= [EffectiveCost] then [ContractedCost] - [EffectiveCost] else null, type number),
				        // Month column
				        "x_Month", each DateTime.Date(Date.StartOfMonth([ChargePeriodStart])), type date),
				    OptionalAdd = if PerformDeprecatedOptimizations = false then Add else Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(
				        Add,
				        // Explain why cost is 0
				        "x_FreeReason", 
				            each if [BilledCost] <> 0.0 or [EffectiveCost] <> 0.0 then null
				            else if [PricingCategory] = "Committed" then "Unknown " & [CommitmentDiscountStatus] & " Commitment"
				            else if [x_BilledUnitPrice] = 0.0 and [x_EffectiveUnitPrice] = 0.0 and [ContractedUnitPrice] = 0.0 and [ListUnitPrice] = 0.0 and _isBlank([CommitmentDiscountType]) then (
				                if _isNotBlank([x_SkuDescription]) and Text.Contains([x_SkuDescription], "Trial") then "Trial" else if _isNotBlank([x_SkuDescription]) and Text.Contains([x_SkuDescription], "Preview") then "Preview" else "Other"
				            )
				            else if [x_BilledUnitPrice] > 0.0 or [x_EffectiveUnitPrice] > 0.0 then (
				                if [PricingQuantity] > 0.0 then "Low Usage" else if [PricingQuantity] = 0.0 then "No Usage" else "Unknown Negative Quantity"
				            )
				            else "Unknown"
				        ),
				        // Unique names -- Must be after ResourceName cleanup and Commitment columns
				        // TODO: Only add differentiators when the name is not unique
				        "CommitmentDiscountNameUnique", each if _isBlank([CommitmentDiscountId]) then null else [CommitmentDiscountName] & " (" & [CommitmentDiscountType] & ")"),
				        "ResourceNameUnique",           each if _isBlank([ResourceId])           then null else [ResourceName] & " (" & [ResourceType] & ")"),
				        "x_ResourceGroupNameUnique",    each if _isBlank([x_ResourceGroupName])  then null else [x_ResourceGroupName] & " (" & [SubAccountName] & ")"),
				        "SubAccountNameUnique",         each if _isBlank([SubAccountId])         then null else [SubAccountName] & " (" & ftk_ParseResourceName([SubAccountId]) & ")"),
				
				    // FTK columns
				    FTK = Table.RemoveColumns(
				        Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(
				            Table.ExpandRecordColumn(
				                Table.ReplaceErrorValues(Table.AddColumn(OptionalAdd, "tmp_Tags", each [x_TagsDictionary]), {{"tmp_Tags", null}}),
				                "tmp_Tags",
				                {"cm-resource-parent", "ms-resource-parent", "hidden-managedby", "costanalysis-parent", "ftk-version",      "ftk-tool"},
				                {"tmp_cmParent",       "tmp_msParent",       "tmp_ManagedBy",    "tmp_caParent",        "x_ToolkitVersion", "tmp_ToolkitTool"}
				            ),
				            "x_ResourceParentId",   
				                each _stringValue(Text.Replace("/" & (
				                    if _isNotBlank([tmp_cmParent])  then [tmp_cmParent] 
				                    else if _isNotBlank([tmp_msParent])  then [tmp_msParent] 
				                    else if _isNotBlank([tmp_ManagedBy]) then [tmp_ManagedBy] 
				                    else if _isNotBlank([tmp_caParent])  then [tmp_caParent] 
				                    else null
				                ), "//", "/"))),
				            "x_ResourceParentType", each ftk_ParseResourceType([x_ResourceParentId])),
				            "x_ResourceParentName", each ftk_ParseResourceName([x_ResourceParentId])),
				            "x_ToolkitTool", 
				                each if _isNotBlank([tmp_ToolkitTool]) then [tmp_ToolkitTool] 
				                else if _isBlank([x_ResourceParentId]) then null 
				                else if Text.Contains(Text.Lower([x_ResourceParentId]), "/providers/microsoft.cloud/hubs/") then "FinOps hubs"
				                else null
				            ),
				        { "tmp_cmParent", "tmp_msParent", "tmp_caParent", "tmp_ManagedBy", "tmp_ToolkitTool" }
				    ),
				
				    // Extracted tags
				    // TODO: Consider adding tag cleanup to this as well
				    ExtractedTags = Table.ExpandRecordColumn(
				        Table.ReplaceErrorValues(Table.AddColumn(FTK, "tmp_Tags", each [x_TagsDictionary]), {{"tmp_Tags", null}}),
				        "tmp_Tags",
				        PromotedTags,
				        List.Transform(PromotedTags, each "tag_" & _)
				    ),
				
				    // AHB columns
				// TODO: Add SQL AHB handling
				    AHB = Table.RemoveColumns(
				        Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(Table.AddColumn(
				            Table.TransformColumnTypes(
				                Table.ExpandRecordColumn(
				                    Table.ReplaceErrorValues(Table.AddColumn(ExtractedTags, "tmp_SkuDetails", each [x_SkuDetailsDictionary]), {{"tmp_SkuDetails", null}}),
				                    "tmp_SkuDetails",
				                    {"UsageType",      "ImageType",      "ServiceType", "VMName",     "VMProperties",      "VCPUs",       "ReservationOrderId",         "ReservationId",         "VMCapacityReservationId", "AHB",        "vCores"},
				                    {"x_SkuUsageType", "x_SkuImageType", "x_SkuType",   "tmp_VMName", "x_SkuVMProperties", "tmp_VMvCPUs", "tmp_AddlReservationOrderId", "tmp_AddlReservationId", "x_CapacityCommitmentId",  "tmp_SQLAHB", "tmp_SQLvCores"}
				                ),
				                {{"tmp_VMvCPUs", Int64.Type}, {"tmp_SQLvCores", Int64.Type}}
				            ),
				            "x_ResourceMachineName",   each if _isNotBlank([tmp_VMName]) then [tmp_VMName] else null),
				            "x_SkuCPUs",               each if [tmp_VMvCPUs] <> null then [tmp_VMvCPUs] else if [tmp_SQLvCores] <> null then [tmp_SQLvCores] else null, Int64.Type),
				            "x_UsageCPUHours",         each if [x_SkuCPUs] <> null then [x_SkuCPUs] * [ConsumedQuantity] else null, type number),
				            "x_SkuLicenseStatus",      each if _isNotBlank([x_SkuMeterSubcategory]) and Text.Contains([x_SkuMeterSubcategory], "Windows") or [tmp_SQLAHB] = "False" then "Not enabled" else if (_isNotBlank([x_SkuImageType]) and Text.Contains([x_SkuImageType], "Windows Server BYOL")) or [tmp_SQLAHB] = "True" or (_isNotBlank([x_SkuMeterSubcategory]) and Text.Contains([x_SkuMeterSubcategory], "Azure Hybrid Benefit")) then "Enabled" else "Not supported"),
				            "x_SkuLicenseCPUs",        each if [x_SkuCPUs] = null then 0 else if [x_SkuCPUs] <= 8 then 8 else if [x_SkuCPUs] <= 16 then 16 else if [x_SkuCPUs] = 20 then 24 else if [x_SkuCPUs] > 20 then [x_SkuCPUs] else 0, type number),
				            "x_CommitmentDiscountKey", each [x_SkuType] & [x_SkuMeterId]),
				        { "tmp_AddlReservationOrderId", "tmp_AddlReservationId", "tmp_SQLAHB", "tmp_SQLvCores", "tmp_VMName", "tmp_VMvCPUs" }
				    ),
				
				    // Unique key for the record -- WARNING: This increases the data size significantly.
				    /*
				    ChargeId = Table.AddColumn(Month, "x_ChargeId", each Text.Combine(List.RemoveItems({
				        Date.ToText([ChargePeriodStart]),
				        [x_BillingAccountId],
				        if [x_BillingProfileId] = [x_BillingAccountId] then null else [x_BillingProfileId], // Only add BP if not the same as the BA (all EA)
				        [x_InvoiceSectionId],
				        if _isNotBlank([ResourceId]) and Text.Contains([ResourceId], [x_SubscriptionId]) then null else [x_SubscriptionId], // Only add sub if not in the resource ID
				        [ResourceId],
				        [tmp_ResourceLocation],
				        [x_SkuOfferId],
				        [SkuPriceId],
				        [x_SkuMeterId],
				        [x_SkuPartNumber],
				        if _isBlank([CommitmentDiscountId]) then null else List.Last(Text.Split([CommitmentDiscountId], "/")),
				        [x_CostAllocationRuleName],
				        [x_CostCenter],
				        if _isBlank([Tags])                 then null else Text.Remove([Tags], {"{","""","}"}),
				        if _isBlank([x_SkuDetails])         then null else Text.Remove([x_SkuDetails], {"{","""","}"})
				    }, {null, ""}), "-")),
				    */
				
				    // Sort columns alphabetically
				    Output = Table.ReorderColumns(AHB, List.Sort(Table.ColumnNames(AHB)))
				in
				    Output
				```

	annotation PBI_QueryRelationships = {"columnCount":50,"keyColumnNames":[],"queryRelationships":[],"columnIdentities":["Section1/Usage details amortized/usagedetailsamortized.{BillingAccountId,0}","Section1/Usage details amortized/usagedetailsamortized.{BillingAccountName,1}","Section1/Usage details amortized/usagedetailsamortized.{BillingPeriodStartDate,2}","Section1/Usage details amortized/usagedetailsamortized.{BillingPeriodEndDate,3}","Section1/Usage details amortized/usagedetailsamortized.{BillingProfileId,4}","Section1/Usage details amortized/usagedetailsamortized.{BillingProfileName,5}","Section1/Usage details amortized/usagedetailsamortized.{AccountOwnerId,6}","Section1/Usage details amortized/usagedetailsamortized.{AccountName,7}","Section1/Usage details amortized/usagedetailsamortized.{SubscriptionId,8}","Section1/Usage details amortized/usagedetailsamortized.{SubscriptionName,9}","Section1/Usage details amortized/usagedetailsamortized.{Date,10}","Section1/Usage details amortized/usagedetailsamortized.{Product,11}","Section1/Usage details amortized/usagedetailsamortized.{PartNumber,12}","Section1/Usage details amortized/usagedetailsamortized.{MeterId,13}","Section1/Usage details amortized/usagedetailsamortized.{ServiceFamily,14}","Section1/Usage details amortized/usagedetailsamortized.{MeterCategory,15}","Section1/Usage details amortized/usagedetailsamortized.{MeterSubCategory,16}","Section1/Usage details amortized/usagedetailsamortized.{MeterRegion,17}","Section1/Usage details amortized/usagedetailsamortized.{MeterName,18}","Section1/Usage details amortized/usagedetailsamortized.{Quantity,19}","Section1/Usage details amortized/usagedetailsamortized.{EffectivePrice,20}","Section1/Usage details amortized/usagedetailsamortized.{Cost,21}","Section1/Usage details amortized/usagedetailsamortized.{UnitPrice,22}","Section1/Usage details amortized/usagedetailsamortized.{BillingCurrency,23}","Section1/Usage details amortized/usagedetailsamortized.{ResourceLocation,24}","Section1/Usage details amortized/usagedetailsamortized.{AvailabilityZone,25}","Section1/Usage details amortized/usagedetailsamortized.{ConsumedService,26}","Section1/Usage details amortized/usagedetailsamortized.{ResourceId,27}","Section1/Usage details amortized/usagedetailsamortized.{ResourceName,28}","Section1/Usage details amortized/usagedetailsamortized.{ServiceInfo1,29}","Section1/Usage details amortized/usagedetailsamortized.{ServiceInfo2,30}","Section1/Usage details amortized/usagedetailsamortized.{AdditionalInfo,31}","Section1/Usage details amortized/usagedetailsamortized.{Tags,32}","Section1/Usage details amortized/usagedetailsamortized.{InvoiceSectionId,33}","Section1/Usage details amortized/usagedetailsamortized.{InvoiceSection,34}","Section1/Usage details amortized/usagedetailsamortized.{CostCenter,35}","Section1/Usage details amortized/usagedetailsamortized.{UnitOfMeasure,36}","Section1/Usage details amortized/usagedetailsamortized.{ResourceGroup,37}","Section1/Usage details amortized/usagedetailsamortized.{ReservationId,38}","Section1/Usage details amortized/usagedetailsamortized.{ReservationName,39}","Section1/Usage details amortized/usagedetailsamortized.{ProductOrderId,40}","Section1/Usage details amortized/usagedetailsamortized.{ProductOrderName,41}","Section1/Usage details amortized/usagedetailsamortized.{OfferId,42}","Section1/Usage details amortized/usagedetailsamortized.{IsAzureCreditEligible,43}","Section1/Usage details amortized/usagedetailsamortized.{Term,44}","Section1/Usage details amortized/usagedetailsamortized.{PublisherName,45}","Section1/Usage details amortized/usagedetailsamortized.{PlanName,46}","Section1/Usage details amortized/usagedetailsamortized.{ChargeType,47}","Section1/Usage details amortized/usagedetailsamortized.{Frequency,48}","Section1/Usage details amortized/usagedetailsamortized.{PublisherType,49}"],"ColumnCount":50,"KeyColumnNames":[],"ColumnIdentities":["Section1/Usage details amortized/usagedetailsamortized.{BillingAccountId,0}","Section1/Usage details amortized/usagedetailsamortized.{BillingAccountName,1}","Section1/Usage details amortized/usagedetailsamortized.{BillingPeriodStartDate,2}","Section1/Usage details amortized/usagedetailsamortized.{BillingPeriodEndDate,3}","Section1/Usage details amortized/usagedetailsamortized.{BillingProfileId,4}","Section1/Usage details amortized/usagedetailsamortized.{BillingProfileName,5}","Section1/Usage details amortized/usagedetailsamortized.{AccountOwnerId,6}","Section1/Usage details amortized/usagedetailsamortized.{AccountName,7}","Section1/Usage details amortized/usagedetailsamortized.{SubscriptionId,8}","Section1/Usage details amortized/usagedetailsamortized.{SubscriptionName,9}","Section1/Usage details amortized/usagedetailsamortized.{Date,10}","Section1/Usage details amortized/usagedetailsamortized.{Product,11}","Section1/Usage details amortized/usagedetailsamortized.{PartNumber,12}","Section1/Usage details amortized/usagedetailsamortized.{MeterId,13}","Section1/Usage details amortized/usagedetailsamortized.{ServiceFamily,14}","Section1/Usage details amortized/usagedetailsamortized.{MeterCategory,15}","Section1/Usage details amortized/usagedetailsamortized.{MeterSubCategory,16}","Section1/Usage details amortized/usagedetailsamortized.{MeterRegion,17}","Section1/Usage details amortized/usagedetailsamortized.{MeterName,18}","Section1/Usage details amortized/usagedetailsamortized.{Quantity,19}","Section1/Usage details amortized/usagedetailsamortized.{EffectivePrice,20}","Section1/Usage details amortized/usagedetailsamortized.{Cost,21}","Section1/Usage details amortized/usagedetailsamortized.{UnitPrice,22}","Section1/Usage details amortized/usagedetailsamortized.{BillingCurrency,23}","Section1/Usage details amortized/usagedetailsamortized.{ResourceLocation,24}","Section1/Usage details amortized/usagedetailsamortized.{AvailabilityZone,25}","Section1/Usage details amortized/usagedetailsamortized.{ConsumedService,26}","Section1/Usage details amortized/usagedetailsamortized.{ResourceId,27}","Section1/Usage details amortized/usagedetailsamortized.{ResourceName,28}","Section1/Usage details amortized/usagedetailsamortized.{ServiceInfo1,29}","Section1/Usage details amortized/usagedetailsamortized.{ServiceInfo2,30}","Section1/Usage details amortized/usagedetailsamortized.{AdditionalInfo,31}","Section1/Usage details amortized/usagedetailsamortized.{Tags,32}","Section1/Usage details amortized/usagedetailsamortized.{InvoiceSectionId,33}","Section1/Usage details amortized/usagedetailsamortized.{InvoiceSection,34}","Section1/Usage details amortized/usagedetailsamortized.{CostCenter,35}","Section1/Usage details amortized/usagedetailsamortized.{UnitOfMeasure,36}","Section1/Usage details amortized/usagedetailsamortized.{ResourceGroup,37}","Section1/Usage details amortized/usagedetailsamortized.{ReservationId,38}","Section1/Usage details amortized/usagedetailsamortized.{ReservationName,39}","Section1/Usage details amortized/usagedetailsamortized.{ProductOrderId,40}","Section1/Usage details amortized/usagedetailsamortized.{ProductOrderName,41}","Section1/Usage details amortized/usagedetailsamortized.{OfferId,42}","Section1/Usage details amortized/usagedetailsamortized.{IsAzureCreditEligible,43}","Section1/Usage details amortized/usagedetailsamortized.{Term,44}","Section1/Usage details amortized/usagedetailsamortized.{PublisherName,45}","Section1/Usage details amortized/usagedetailsamortized.{PlanName,46}","Section1/Usage details amortized/usagedetailsamortized.{ChargeType,47}","Section1/Usage details amortized/usagedetailsamortized.{Frequency,48}","Section1/Usage details amortized/usagedetailsamortized.{PublisherType,49}"],"RelationshipInfo":[]}

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

