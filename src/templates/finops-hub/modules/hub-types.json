{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "3328278183267243822"
    }
  },
  "definitions": {
    "IdNameObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "metadata": {
        "id": "Fully-qualified resource ID.",
        "name": "Resource name.",
        "description": "Resource ID and name."
      }
    },
    "HubInstanceConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "safeName": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "tags": {
          "type": "object"
        },
        "version": {
          "type": "string"
        }
      },
      "metadata": {
        "id": "FinOps hub resource ID.",
        "name": "FinOps hub instance name.",
        "safeName": "Safe name of the FinOps hub instance without underscores.",
        "suffix": "Unique suffix used for shared resources.",
        "location": "Azure resource location of the FinOps hub instance.",
        "tags": "Tags to apply to all FinOps hub resources.",
        "version": "FinOps hub version number.",
        "description": "FinOps hub instance details."
      }
    },
    "HubDeploymentConfig": {
      "type": "object",
      "properties": {
        "tagsByResource": {
          "type": "object"
        },
        "storage": {
          "type": "string"
        },
        "isTelemetryEnabled": {
          "type": "bool"
        }
      },
      "metadata": {
        "tagsByResource": "Tags to apply to resources based on their resource type.",
        "storage": "Name of the storage account used for deployment scripts.",
        "isTelemetryEnabled": "Indicates whether telemetry should be enabled for deployments.",
        "description": "FinOps hub deployment settings."
      }
    },
    "HubStorageConfig": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "isInfrastructureEncrypted": {
          "type": "bool"
        }
      },
      "metadata": {
        "sku": "Storage account SKU. Allowed values: \"Premium_LRS\", \"Premium_ZRS\".",
        "isInfrastructureEncrypted": "Indicates whether infrastructure encryption is enabled for the storage account.",
        "description": "FinOps hub storage settings to be used when creating storage accounts."
      }
    },
    "HubVaultConfig": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        }
      },
      "metadata": {
        "sku": "KeyVault SKU. Allowed values: \"standard\", \"premium\".",
        "description": "FinOps hub KeyVault settings to be used when creating vaults."
      }
    },
    "HubNetworkConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isPrivate": {
          "type": "bool"
        },
        "addressPrefix": {
          "type": "string"
        },
        "dnsZones": {
          "type": "object",
          "properties": {
            "blob": {
              "$ref": "#/definitions/IdNameObject"
            },
            "dfs": {
              "$ref": "#/definitions/IdNameObject"
            },
            "queue": {
              "$ref": "#/definitions/IdNameObject"
            },
            "table": {
              "$ref": "#/definitions/IdNameObject"
            }
          }
        },
        "subnets": {
          "type": "object",
          "properties": {
            "dataFactory": {
              "type": "string"
            },
            "keyVault": {
              "type": "string"
            },
            "scripts": {
              "type": "string"
            },
            "storage": {
              "type": "string"
            }
          }
        }
      },
      "metadata": {
        "id": "Resource ID of the FinOps hub isolated virtual network, if private networking is enabled.",
        "name": "Name of the FinOps hub isolated virtual network, if private networking is enabled.",
        "isPrivate": "Indicates whether private networking is enabled.",
        "addressPrefix": "Address prefix for the FinOps hub isolated virtual network, if private networking is enabled.",
        "dnsZones": {
          "blob": "Resource ID and name for the blob storage DNS zone.",
          "dfs": "Resource ID and name for the DFS storage DNS zone.",
          "queue": "Resource ID and name for the queue storage DNS zone.",
          "table": "Resource ID and name for the table storage DNS zone."
        },
        "subnets": {
          "dataFactory": "Resource ID of the subnet for Data Factory instances.",
          "keyVault": "Resource ID of the subnet for Key Vault instances.",
          "scripts": "Resource ID of the subnet for deployment script storage.",
          "storage": "Resource ID of the subnet for storage accounts."
        },
        "description": "FinOps hub network settings."
      }
    },
    "HubCoreConfig": {
      "type": "object",
      "properties": {
        "hub": {
          "$ref": "#/definitions/HubInstanceConfig"
        },
        "deployment": {
          "$ref": "#/definitions/HubDeploymentConfig"
        },
        "storage": {
          "$ref": "#/definitions/HubStorageConfig"
        },
        "keyVault": {
          "$ref": "#/definitions/HubVaultConfig"
        },
        "network": {
          "$ref": "#/definitions/HubNetworkConfig"
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "hub": "FinOps hub instance details",
        "deployment": "FinOps hub deployment details",
        "storage": "FinOps hub storage details",
        "keyVault": "FinOps hub KeyVault details",
        "network": "FinOps hub network details",
        "description": "FinOps hub configuration settings."
      }
    },
    "HubAppConfig": {
      "type": "object",
      "properties": {
        "hub": {
          "$ref": "#/definitions/HubInstanceConfig"
        },
        "deployment": {
          "$ref": "#/definitions/HubDeploymentConfig"
        },
        "storage": {
          "$ref": "#/definitions/HubStorageConfig"
        },
        "keyVault": {
          "$ref": "#/definitions/HubVaultConfig"
        },
        "network": {
          "$ref": "#/definitions/HubNetworkConfig"
        },
        "publisher": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "suffix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "dataFactory": {
              "type": "string"
            },
            "keyVault": {
              "type": "string"
            },
            "storage": {
              "type": "string"
            }
          }
        },
        "app": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "fullName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          }
        }
      },
      "metadata": {
        "__bicep_export!": true,
        "hub": "FinOps hub instance details",
        "deployment": "FinOps hub deployment details",
        "storage": "FinOps hub storage details",
        "network": "FinOps hub network details",
        "publisher": {
          "uniqueId": "Unique suffix used for publisher resources.",
          "name": "Fully-qualified namespace of the FinOps hub app publisher.",
          "displayName": "Display name of the FinOps hub app publisher.",
          "tags": "Tags to apply to all FinOps hub resources for this FinOps hub app publisher.",
          "dataFactory": "Name of the Data Factory instance for this publisher.",
          "keyVault": "Name of the KeyVault instance for this publisher.",
          "storage": "Name of the storage account for this publisher.",
          "subnetId": "Resource ID of the private endpoint subnet for the storage account."
        },
        "app": {
          "name": "Short name of the FinOps hub app (not including the publisher namespace).",
          "fullName": "Fully-qualified namespace of the FinOps hub app.",
          "displayName": "Display name of the FinOps hub app.",
          "tags": "Tags to apply to all FinOps hub resources for this FinOps hub app."
        },
        "description": "FinOps hub app configuration settings."
      }
    },
    "HubAppFeature": {
      "type": "string",
      "allowedValues": [
        "DataFactory",
        "KeyVault",
        "Storage"
      ],
      "metadata": {
        "__bicep_export!": true,
        "description": "FinOps hub app features."
      }
    }
  },
  "functions": [
    {
      "namespace": "__bicep",
      "members": {
        "safeName": {
          "parameters": [
            {
              "type": "string",
              "name": "name"
            }
          ],
          "output": {
            "type": "string",
            "value": "[replace(replace(toLower(parameters('name')), '-', ''), '_', '')]"
          }
        },
        "idName": {
          "parameters": [
            {
              "type": "string",
              "name": "name"
            },
            {
              "type": "string",
              "name": "resourceType"
            }
          ],
          "output": {
            "$ref": "#/definitions/IdNameObject",
            "value": {
              "id": "[resourceId(parameters('resourceType'), parameters('name'))]",
              "name": "[parameters('name')]"
            }
          }
        },
        "dnsZoneIdName": {
          "parameters": [
            {
              "type": "string",
              "name": "type"
            }
          ],
          "output": {
            "$ref": "#/definitions/IdNameObject",
            "value": "[__bicep.idName(format('privatelink.{0}.{1}', parameters('type'), environment().suffixes.storage), 'Microsoft.Network/privateDnsZones')]"
          }
        },
        "newHubCoreConfigInternal": {
          "parameters": [
            {
              "type": "string",
              "name": "id"
            },
            {
              "type": "string",
              "name": "name"
            },
            {
              "type": "string",
              "name": "safeName"
            },
            {
              "type": "string",
              "name": "suffix"
            },
            {
              "type": "string",
              "name": "location"
            },
            {
              "type": "object",
              "name": "tags"
            },
            {
              "type": "object",
              "name": "tagsByResource"
            },
            {
              "type": "string",
              "name": "storageSku"
            },
            {
              "type": "string",
              "name": "keyVaultSku"
            },
            {
              "type": "bool",
              "name": "enableInfrastructureEncryption"
            },
            {
              "type": "bool",
              "name": "enablePublicAccess"
            },
            {
              "type": "string",
              "name": "networkName"
            },
            {
              "type": "string",
              "name": "networkAddressPrefix"
            },
            {
              "type": "bool",
              "name": "isTelemetryEnabled"
            }
          ],
          "output": {
            "$ref": "#/definitions/HubCoreConfig",
            "value": {
              "hub": {
                "id": "[parameters('id')]",
                "name": "[parameters('name')]",
                "safeName": "[parameters('safeName')]",
                "suffix": "[parameters('suffix')]",
                "location": "[coalesce(parameters('location'), resourceGroup().location)]",
                "tags": "[union(parameters('tags'), createObject('cm-resource-parent', parameters('id'), 'ftk-tool', 'FinOps hubs', 'ftk-version', variables('finOpsToolkitVersion')))]",
                "version": "[variables('finOpsToolkitVersion')]"
              },
              "deployment": "[union(createObject('tagsByResource', parameters('tagsByResource'), 'isTelemetryEnabled', coalesce(parameters('isTelemetryEnabled'), true())), if(parameters('enablePublicAccess'), createObject('storage', ''), createObject('storage', format('{0}script{1}', take(parameters('safeName'), sub(16, length(parameters('suffix')))), parameters('suffix')))))]",
              "storage": {
                "sku": "[parameters('storageSku')]",
                "isInfrastructureEncrypted": "[parameters('enableInfrastructureEncryption')]"
              },
              "keyVault": {
                "sku": "[parameters('keyVaultSku')]"
              },
              "network": "[if(parameters('enablePublicAccess'), createObject('isPrivate', false(), 'id', '', 'name', '', 'addressPrefix', '', 'dnsZones', createObject('blob', createObject('id', '', 'name', ''), 'dfs', createObject('id', '', 'name', ''), 'queue', createObject('id', '', 'name', ''), 'table', createObject('id', '', 'name', '')), 'subnets', createObject('dataFactory', '', 'keyVault', '', 'scripts', '', 'storage', '')), createObject('isPrivate', true(), 'id', resourceId('Microsoft.Network/virtualNetworks', parameters('networkName')), 'name', parameters('networkName'), 'addressPrefix', parameters('networkAddressPrefix'), 'dnsZones', createObject('blob', __bicep.dnsZoneIdName('blob'), 'dfs', __bicep.dnsZoneIdName('dfs'), 'queue', __bicep.dnsZoneIdName('queue'), 'table', __bicep.dnsZoneIdName('table')), 'subnets', createObject('dataFactory', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), 'private-endpoint-subnet'), 'keyVault', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), 'private-endpoint-subnet'), 'scripts', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), 'script-subnet'), 'storage', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), 'private-endpoint-subnet'))))]"
            }
          }
        },
        "newHubCoreConfig": {
          "parameters": [
            {
              "type": "string",
              "name": "name"
            },
            {
              "type": "string",
              "name": "location"
            },
            {
              "type": "object",
              "name": "tags"
            },
            {
              "type": "object",
              "name": "tagsByResource"
            },
            {
              "type": "string",
              "name": "storageSku"
            },
            {
              "type": "string",
              "name": "keyVaultSku"
            },
            {
              "type": "bool",
              "name": "enableInfrastructureEncryption"
            },
            {
              "type": "bool",
              "name": "enablePublicAccess"
            },
            {
              "type": "string",
              "name": "networkAddressPrefix"
            },
            {
              "type": "bool",
              "name": "isTelemetryEnabled"
            }
          ],
          "output": {
            "$ref": "#/definitions/HubCoreConfig",
            "value": "[__bicep.newHubCoreConfigInternal(format('{0}/providers/Microsoft.Cloud/hubs/{1}', resourceGroup().id, parameters('name')), parameters('name'), __bicep.safeName(parameters('name')), uniqueString(parameters('name'), resourceGroup().id), parameters('location'), parameters('tags'), parameters('tagsByResource'), parameters('storageSku'), parameters('keyVaultSku'), parameters('enableInfrastructureEncryption'), parameters('enablePublicAccess'), format('{0}-vnet-{1}', __bicep.safeName(parameters('name')), parameters('location')), parameters('networkAddressPrefix'), coalesce(parameters('isTelemetryEnabled'), true()))]"
          },
          "metadata": {
            "description": "Creates a new FinOps hub configuration object.",
            "__bicep_export!": true
          }
        },
        "newAppInternalConfig": {
          "parameters": [
            {
              "$ref": "#/definitions/HubCoreConfig",
              "name": "coreConfig"
            },
            {
              "type": "string",
              "name": "publisher"
            },
            {
              "type": "string",
              "name": "namespace"
            },
            {
              "type": "string",
              "name": "publisherSuffix"
            },
            {
              "type": "object",
              "name": "publisherTags"
            },
            {
              "type": "string",
              "name": "appName"
            },
            {
              "type": "string",
              "name": "appNamespace"
            },
            {
              "type": "string",
              "name": "displayName"
            },
            {
              "type": "string",
              "name": "version"
            },
            {
              "type": "string",
              "name": "customStorageName"
            },
            {
              "type": "string",
              "name": "customDataFactoryName"
            },
            {
              "type": "string",
              "name": "customKeyVaultName"
            }
          ],
          "output": {
            "$ref": "#/definitions/HubAppConfig",
            "value": "[shallowMerge(createArray(parameters('coreConfig'), createObject('publisher', createObject('name', parameters('namespace'), 'displayName', parameters('publisher'), 'suffix', parameters('publisherSuffix'), 'tags', union(parameters('coreConfig').hub.tags, parameters('publisherTags')), 'dataFactory', if(not(empty(parameters('customDataFactoryName'))), parameters('customDataFactoryName'), replace(format('{0}{1}', take(format('{0}-engine', replace(parameters('coreConfig').hub.name, '_', '-')), sub(63, length(parameters('publisherSuffix')))), parameters('publisherSuffix')), '--', '-')), 'keyVault', if(not(empty(parameters('customKeyVaultName'))), parameters('customKeyVaultName'), replace(format('{0}{1}', take(format('{0}-vault', replace(parameters('coreConfig').hub.name, '_', '-')), sub(24, length(parameters('publisherSuffix')))), parameters('publisherSuffix')), '--', '-')), 'storage', if(not(empty(parameters('customStorageName'))), parameters('customStorageName'), format('{0}{1}', take(parameters('coreConfig').hub.safeName, sub(24, length(parameters('publisherSuffix')))), parameters('publisherSuffix')))), 'app', createObject('name', parameters('appName'), 'fullName', parameters('appNamespace'), 'displayName', parameters('displayName'), 'tags', union(parameters('coreConfig').hub.tags, parameters('publisherTags'), createObject('ftk-hubapp', parameters('appNamespace'), 'ftk-hubapp-version', parameters('version')))))))]"
          }
        },
        "newAppConfig": {
          "parameters": [
            {
              "$ref": "#/definitions/HubCoreConfig",
              "name": "config"
            },
            {
              "type": "string",
              "name": "publisher"
            },
            {
              "type": "string",
              "name": "namespace"
            },
            {
              "type": "string",
              "name": "appName"
            },
            {
              "type": "string",
              "name": "displayName"
            },
            {
              "type": "string",
              "name": "version"
            },
            {
              "type": "string",
              "name": "customStorageName"
            },
            {
              "type": "string",
              "name": "customDataFactoryName"
            },
            {
              "type": "string",
              "name": "customKeyVaultName"
            }
          ],
          "output": {
            "$ref": "#/definitions/HubAppConfig",
            "value": "[__bicep.newAppInternalConfig(parameters('config'), parameters('publisher'), parameters('namespace'), if(or(not(variables('usePublisherSpecificResources')), equals(parameters('namespace'), 'Microsoft.FinOpsToolkit.Hubs')), parameters('config').hub.suffix, uniqueString(parameters('namespace'))), createObject('ftk-hubapp-publisher', parameters('namespace')), parameters('appName'), format('{0}.{1}', parameters('namespace'), parameters('appName')), parameters('displayName'), parameters('version'), parameters('customStorageName'), parameters('customDataFactoryName'), parameters('customKeyVaultName'))]"
          },
          "metadata": {
            "description": "Creates a new FinOps hub app configuration object.",
            "__bicep_export!": true
          }
        },
        "getHubTags": {
          "parameters": [
            {
              "$ref": "#/definitions/HubCoreConfig",
              "name": "config"
            },
            {
              "type": "string",
              "name": "resourceType"
            }
          ],
          "output": {
            "type": "object",
            "value": "[union(parameters('config').hub.tags, coalesce(tryGet(parameters('config').deployment.tagsByResource, parameters('resourceType')), createObject()))]"
          },
          "metadata": {
            "description": "Returns a tags dictionary that includes tags for the FinOps hub instance.",
            "__bicep_export!": true
          }
        },
        "getPublisherTags": {
          "parameters": [
            {
              "$ref": "#/definitions/HubAppConfig",
              "name": "config"
            },
            {
              "type": "string",
              "name": "resourceType"
            }
          ],
          "output": {
            "type": "object",
            "value": "[union(if(variables('usePublisherSpecificResources'), parameters('config').publisher.tags, parameters('config').hub.tags), coalesce(tryGet(parameters('config').deployment.tagsByResource, parameters('resourceType')), createObject()))]"
          },
          "metadata": {
            "description": "Returns a tags dictionary that includes tags for the FinOps hub app publisher.",
            "__bicep_export!": true
          }
        },
        "getAppTags": {
          "parameters": [
            {
              "$ref": "#/definitions/HubAppConfig",
              "name": "config"
            },
            {
              "type": "string",
              "name": "resourceType"
            },
            {
              "type": "bool",
              "nullable": true,
              "name": "forceAppTags"
            }
          ],
          "output": {
            "type": "object",
            "value": "[union(if(or(variables('usePublisherSpecificResources'), coalesce(parameters('forceAppTags'), false())), parameters('config').app.tags, parameters('config').hub.tags), coalesce(tryGet(parameters('config').deployment.tagsByResource, parameters('resourceType')), createObject()))]"
          },
          "metadata": {
            "description": "Returns a tags dictionary that includes tags for the FinOps hub app.",
            "__bicep_export!": true
          }
        }
      }
    }
  ],
  "variables": {
    "usePublisherSpecificResources": false,
    "finOpsToolkitVersion": "0.11-dev"
  },
  "resources": {}
}