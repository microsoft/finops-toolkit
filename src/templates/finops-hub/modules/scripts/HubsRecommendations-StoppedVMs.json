{
    "inputDataset": "resourceGraph",
    "outputDataset": "Recommendations",
    "provider": "Microsoft",
    "query": "resources | where type =~ 'microsoft.compute/virtualmachines' and tostring(properties.extended.instanceView.powerState.displayStatus) != 'VM deallocated' and tostring(properties.extended.instanceView.powerState.displayStatus) != 'VM running' | extend PowerState=tostring(properties.extended.instanceView.powerState.displayStatus) | extend Location=location, type| project id, PowerState, Location, resourceGroup, subscriptionId, VMName=name, type| project     x_RecommendationId=strcat(tolower(id),'-notDeallocated'),     x_ResourceGroupName=tolower(resourceGroup),     SubAccountId=subscriptionId,     x_RecommendationCategory='Cost',     x_RecommendationImpact='Medium',     x_RecommendationTypeId='ab2ff882-e927-4093-9d11-631be0219975',     x_RecommendationControl='UsageOptimization/OptimizeResources',     x_RecommendationMaturityLevel='Preview',     x_RecommendationDescription='Virtual machine is powered off but not deallocated',     x_RecommendationSolution='Deallocate the virtual machine to ensure it does not incur in compute costs',     ResourceId = tolower(id),     x_ResourceType=type,     ResourceName=tolower(VMName),     x_RecommendationDetails= strcat('{\\\"PowerState\\\": ', PowerState, ',\\\"Location\\\": \\\"', Location, '\\\" }'),    x_RecommendationDate = now() | join kind=leftouter ( resourcecontainers | where type == 'microsoft.resources/subscriptions' | project SubAccountName=name, SubAccountId=subscriptionId ) on SubAccountId | project-away SubAccountId1",
    "schemaFile": "recommendations_1.0.json",
    "scope": "azurerbac",
    "source": "Azure Resource Graph",
    "type": "HubsRecommendations-StoppedVMs",
    "version": "1.0"
}