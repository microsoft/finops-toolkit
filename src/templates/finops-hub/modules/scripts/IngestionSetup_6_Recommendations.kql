// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

//===| Recommendations |================================================================================================
// Supported datasets/versions:
// - MS CM EA reservation recommendations: 2023-05-01  -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/reservation-recommendations-ea
// - MS CM MCA reservation recommendations: 2023-05-01 -- See https://learn.microsoft.com/azure/cost-management-billing/dataset-schema/reservation-recommendations-mca
//======================================================================================================================

// Recommendations_raw table
.create-merge table Recommendations_raw (
    CostWithNoReservedInstances:        decimal,   // MS CM EA resv reco 2024-05-01
    CostWithNoReservedInstancesJson:    string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON
    FirstUsageDate:                     datetime,  // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    InstanceFlexibilityGroup:           string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    InstanceFlexibilityRatio:           decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    Location:                           string,    // MS CM EA+MCA resv reco 2024-05-01
    LookBackPeriod:                     string,    // MS CM EA+MCA resv reco 2024-05-01
    MeterId:                            string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    NetSavings:                         decimal,   // MS CM EA resv reco 2024-05-01
    NetSavingsJson:                     string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON
    NormalizedSize:                     string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    RecommendedQuantity:                decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    RecommendedQuantityNormalized:      decimal,   // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    ResourceType:                       string,    // MS CM EA+MCA resv reco 2024-05-01
    Scope:                              string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    SKU:                                string,    // MS CM EA resv reco 2024-05-01
    SkuName:                            string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces
    SkuProperties:                      string,    // MS CM EA/MCA resv reco 2024-05-01 -- Renamed for MCA
    SubscriptionId:                     string,    // MS CM EA+MCA resv reco 2024-05-01
    Term:                               string,    // MS CM EA+MCA resv reco 2024-05-01
    TotalCostWithReservedInstances:     decimal,   // MS CM EA resv reco 2024-05-01
    TotalCostWithReservedInstancesJson: string,    // MS CM MCA resv reco 2024-05-01 -- Renamed to remove spaces and flag as JSON
    x_SourceName:                       string,    // Hubs add-on
    x_SourceProvider:                   string,    // Hubs add-on
    x_SourceType:                       string,    // Hubs add-on
    x_SourceVersion:                    string     // Hubs add-on
)

// Recommendations_raw ingestion mapping
.create-or-alter table Recommendations_raw ingestion parquet mapping "Recommendations_raw_mapping"
```
[
    { "Column": "CostWithNoReservedInstances",        "Properties": { "Field": "CostWithNoReservedInstances" } },
    { "Column": "CostWithNoReservedInstancesJson",    "Properties": { "Field": "CostWithNoReservedInstancesJson" } },
    { "Column": "FirstUsageDate",                     "Properties": { "Field": "FirstUsageDate" } },
    { "Column": "InstanceFlexibilityGroup",           "Properties": { "Field": "InstanceFlexibilityGroup" } },
    { "Column": "InstanceFlexibilityRatio",           "Properties": { "Field": "InstanceFlexibilityRatio" } },
    { "Column": "Location",                           "Properties": { "Field": "Location" } },
    { "Column": "LookBackPeriod",                     "Properties": { "Field": "LookBackPeriod" } },
    { "Column": "MeterId",                            "Properties": { "Field": "MeterId" } },
    { "Column": "NetSavings",                         "Properties": { "Field": "NetSavings" } },
    { "Column": "NetSavingsJson",                     "Properties": { "Field": "NetSavingsJson" } },
    { "Column": "NormalizedSize",                     "Properties": { "Field": "NormalizedSize" } },
    { "Column": "RecommendedQuantity",                "Properties": { "Field": "RecommendedQuantity" } },
    { "Column": "RecommendedQuantityNormalized",      "Properties": { "Field": "RecommendedQuantityNormalized" } },
    { "Column": "ResourceType",                       "Properties": { "Field": "ResourceType" } },
    { "Column": "Scope",                              "Properties": { "Field": "Scope" } },
    { "Column": "SKU",                                "Properties": { "Field": "SKU" } },
    { "Column": "SkuName",                            "Properties": { "Field": "SkuName" } },
    { "Column": "SkuProperties",                      "Properties": { "Field": "SkuProperties" } },
    { "Column": "SubscriptionId",                     "Properties": { "Field": "SubscriptionId" } },
    { "Column": "Term",                               "Properties": { "Field": "Term" } },
    { "Column": "TotalCostWithReservedInstances",     "Properties": { "Field": "TotalCostWithReservedInstances" } },
    { "Column": "TotalCostWithReservedInstancesJson", "Properties": { "Field": "TotalCostWithReservedInstancesJson" } },
    { "Column": "x_SourceName",                       "Properties": { "Field": "x_SourceName" } },
    { "Column": "x_SourceProvider",                   "Properties": { "Field": "x_SourceProvider" } },
    { "Column": "x_SourceType",                       "Properties": { "Field": "x_SourceType" } },
    { "Column": "x_SourceVersion",                    "Properties": { "Field": "x_SourceVersion" } }
]
```

// Recommendations_raw retention policy
.alter-merge table Recommendations_raw policy retention softdelete = $$rawRetentionInDays$$d recoverability = disabled

//----------------------------------------------------------------------------------------------------------------------

// Recommendations_transform_v1_0 function
.create-or-alter function
with (docstring='All recommendations transformed to FOCUS 1.0.', folder='Recommendations')
Recommendations_transform_v1_0()
{
    // NOTE: All open issues and questions are tracked @ https://github.com/microsoft/finops-toolkit/issues/1111
    let isoMonths = (duration: string) {
        let number = toint(replace_regex(duration, @'[PMY]', ''));
        toint(case(
            duration == '', toint(''),
            duration endswith "Y", number * 12,
            duration endswith "M", number,
            -1
        ))
    };
    Recommendations_raw
    | extend x_IngestionTime = ingestion_time()
    //
    // Set ProviderName
    | extend ProviderName = 'Microsoft'
    //
    // Set source columns
    | extend x_SourceName     = coalesce(x_SourceName, iff(ProviderName == 'Microsoft', 'Cost Management', ProviderName))
    | extend x_SourceProvider = coalesce(x_SourceProvider, ProviderName)
    | extend x_SourceType     = coalesce(x_SourceType, iff(ProviderName == 'Microsoft', 'ReservationRecommendations', ''))
    | extend x_SourceVersion  = coalesce(x_SourceVersion, iff(ProviderName == 'Microsoft', '2023-05-01', ''))
    //
    // Convert JSON cost columns to decimal
    | extend CostWithNoReservedInstances    = case(isnotempty(CostWithNoReservedInstances),    CostWithNoReservedInstances,    isnotempty(CostWithNoReservedInstancesJson),    todecimal(extract(@'"value":([0-9\.]+)', 1, CostWithNoReservedInstancesJson)),    CostWithNoReservedInstances)
    | extend NetSavings                     = case(isnotempty(NetSavings),                     NetSavings,                     isnotempty(NetSavingsJson),                     todecimal(extract(@'"value":([0-9\.]+)', 1, NetSavingsJson)),                     NetSavings)
    | extend TotalCostWithReservedInstances = case(isnotempty(TotalCostWithReservedInstances), TotalCostWithReservedInstances, isnotempty(TotalCostWithReservedInstancesJson), todecimal(extract(@'"value":([0-9\.]+)', 1, TotalCostWithReservedInstancesJson)), TotalCostWithReservedInstances)
    //
    // Build recommendation details
    | lookup kind=leftouter (Regions | summarize RegionName = make_set(RegionName)[0] by Location = RegionId) on Location
    | extend x_RecommendationDetails = case(
      x_SourceType == 'ReservationRecommendations', bag_pack(
        'CommitmentDiscountNormalizedGroup', InstanceFlexibilityGroup,
        'CommitmentDiscountNormalizedRatio', InstanceFlexibilityRatio,
        'CommitmentDiscountNormalizedSize', NormalizedSize,
        'CommitmentDiscountResourceType', ResourceType,
        'CommitmentDiscountScope', Scope,
        'LookbackPeriodDuration', case(
            LookBackPeriod matches regex @'^Last([0-9]+)Days$', replace_regex(LookBackPeriod, @'^Last([0-9]+)Days$', @'P\1D'),
            LookBackPeriod matches regex @'^[0-9]+$',           strcat('P', LookBackPeriod, 'D'),
            ''
        ),
        'LookbackPeriodStart', FirstUsageDate,
        'RecommendedQuantity', RecommendedQuantity,
        'RecommendedQuantityNormalized', RecommendedQuantityNormalized,
        'RegionId', Location,
        'RegionName', RegionName,
        'SkuMeterId', MeterId,
        'SkuPriceDetails', SkuProperties,
        'SkuSize', coalesce(SKU, SkuName),
        'SkuTerm', isoMonths(Term)
      ),
      dynamic({})
    )
    //
    // Sort columns and apply final transforms
    | extend x_RecommendationDate = FirstUsageDate + (toint(extract(@'^P([0-9]+)D$', 1, tostring(x_RecommendationDetails.LookbackPeriodDuration))) * 1d)
    | extend x_RecommendationDate = iff(x_RecommendationDate > now(), startofday(now()), x_RecommendationDate)
    | project
      ProviderName,
      SubAccountId = iff(isnotempty(SubscriptionId), strcat('/subscriptions/', SubscriptionId), ''),
      x_IngestionTime,
      x_EffectiveCostAfter = TotalCostWithReservedInstances,
      x_EffectiveCostBefore = CostWithNoReservedInstances,
      x_EffectiveCostSavings = NetSavings,
      x_RecommendationDate = FirstUsageDate + (toint(extract(@'^P([0-9]+)D$', 1, tostring(x_RecommendationDetails.LookbackPeriodDuration))) * 1d),
      x_RecommendationDetails,
      x_SourceName,
      x_SourceProvider,
      x_SourceType,
      x_SourceVersion
}

//----------------------------------------------------------------------------------------------------------------------

// Recommendations_final_v1_0 table
.create-merge table Recommendations_final_v1_0 (
    ProviderName:            string,
    SubAccountId:            string,
    x_IngestionTime:         datetime,
    x_EffectiveCostAfter:    decimal,
    x_EffectiveCostBefore:   decimal,
    x_EffectiveCostSavings:  decimal,
    x_RecommendationDate:    datetime,
    x_RecommendationDetails: dynamic,
    x_SourceName:            string,
    x_SourceProvider:        string,
    x_SourceType:            string,
    x_SourceVersion:         string
)

//----------------------------------------------------------------------------------------------------------------------

// Disable Recommendations_raw streaming ingestion (required for Fabric)
.alter table Recommendations_raw policy streamingingestion disable

// Update policy for Recommendations_raw -> Recommendations_final_v1_0 table
// NOTE: Must be after transform function is defined
.alter table Recommendations_final_v1_0 policy update
```
[{
    "IsEnabled": true,
    "Source": "Recommendations_raw",
    "Query": "Recommendations_transform_v1_0()",
    "IsTransactional": true,
    "PropagateIngestionProperties": true
}]
```